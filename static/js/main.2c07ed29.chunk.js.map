{"version":3,"sources":["theme.tsx","components/Nav.tsx","components/Header.tsx","components/RoomDescription.tsx","components/RoomImage.tsx","components/Message.tsx","components/LocationObjects.tsx","components/Inventory.tsx","styled-constants.tsx","utils/dataHelper.js","actions/io.js","components/GameActions.tsx","components/ExploreActions.tsx","components/WorldMap.tsx","pages/Game.tsx","pages/About.tsx","pages/Todo.tsx","App.tsx","registerServiceWorker.js","reducers/index.js","reducers/ioReducer.js","store/configureStore.js","index.tsx"],"names":["GlobalStyles","createGlobalStyle","props","theme","BACKGROUND_COLOR","TEXT_COLOR","HIGHLIGHT_COLOR","BUTTON_TEXT_COLOR","BUTTON_DISABLED_TEXT_COLOR","BUTTON_ENABLED","BUTTON_DISABLED","NavDiv","styled","div","Nav","to","process","activeStyle","color","HeaderDiv","TitleDiv","Header","title","DescDiv","RoomDescription","description","ImageDiv","RoomImage","imagePath","path","image","console","log","style","backgroundImage","MessageDiv","Message","message","LocationObjectsDiv","LocationObjects","items","locationObjects","filter","item","show","map","desc","join","length","InventoryDiv","Inventory","money","inventory","ActionButton","button","getRoomData","roomId","rooms","room","id","getAllowedActions","objects","actions","allowableActions","actionsToCheck","i","condition","conditions","allowed","hasOwnProperty","isCarrying","j","k","areCarrying","obj","loc","roomContains","isValidLocation","location","hasMoney","haveMoney","push","RESULT_MESSAGE","RESULT_ROLL","RESULT_SCORE","RESULT_TAKE","RESULT_DROP","RESULT_LOCATION","RESULT_DESTROY","RESULT_MONEY","RESULT_ROOM_DESC","RESULT_CREATE_EXIT","RESTART","restart","type","resultMessage","data","resultLocation","resultMoney","resultCreateExit","Actions","dispatch","useDispatch","useSelector","state","gameData","handleAction","action","e","preventDefault","results","a","Object","keys","key","dispatchResults","roll","Math","ceil","random","sides","resultSuccessRoll","rollMessage","resultTake","resultDrop","resultScore","resultDestroy","resultRoomDesc","warn","index","onClick","ActionsDiv","ExploreActions","handleMove","exit","currentRoomExits","exits","u","d","n","s","w","renderOpenExit","renderClosedExit","disabled","currentRoomData","unsortedExits","roomData","allowedExits","forEach","getAllowedExits","potentialExits","allowableExits","includes","width","display","textAlign","renderExits","canvasPath","WorldMapDiv","WorldMap","discoveredPaths","canvasRef","useRef","mapContainerRef","useState","mapWidth","setMapWidth","useEffect","updateCanvasDebounce","debounce","current","max","min","offsetWidth","window","addEventListener","removeEventListener","ctx","getContext","visitedRooms","height","spacing","middle","fillStyle","fillRect","save","globalCompositeOperation","beginPath","fill","restore","strokeStyle","setLineDash","grid","parseInt","x","floor","y","values","exitVal","xE","yE","moveTo","lineTo","stroke","arc","PI","shadowBlur","shadowColor","updateCanvasCalc","ref","HomeDiv","TextPanelDiv","MapContainerDiv","ImageContainerDiv","Game","lastMessage","getDescription","object","getLocationObjects","getImage","getInventory","PageDiv","About","React","setWidth","setHeight","updateWindowDimensions","innerWidth","innerHeight","StrictMode","background","padding","borderRadius","href","version","DoneP","p","Todo","App","gameTitle","component","from","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","rootReducer","combineReducers","restartData","JSON","parse","stringify","initialData","score","move","updatedObjects","element","droppedObjects","paths","concat","indexOf","updatedDestroyObjects","r","roomExits","dir","toRoom","input","persistConfig","storage","persistedReducer","persistReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","render","loading","document","getElementById","URL","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2c07ed29.chunk.js","sourcesContent":["\r\n\r\nimport { createGlobalStyle } from \"styled-components/macro\";\r\n\r\n//try https://scotch.io/@micwanyoike/how-to-add-fonts-to-a-react-project\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n \r\n@import url(https://fonts.googleapis.com/css?family=Jacques+Francois+Shadow|Rye|Yesteryear|VT323|Lato);\r\nbody {\r\n\tfont-family: 'VT323', monospace;\r\n\tfont-family: 'Lato', sans-serif;\r\n\tfont-size:14px;\r\n\tletter-spacing: 1px;\r\n\tline-height: 18px;\r\n\tbackground-color: ${props => theme.BACKGROUND_COLOR};\r\n\tcolor: ${props => theme.TEXT_COLOR};\r\n\t/* GOOD IDEA TO MAKE TEXT UNSELECTABLE?? */\r\n\t-webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Safari */\r\n     -khtml-user-select: none; /* Konqueror HTML */\r\n       -moz-user-select: none; /* Firefox */\r\n        -ms-user-select: none; /* Internet Explorer/Edge */\r\n            user-select: none; /* Non-prefixed version, currently\r\n                                  supported by Chrome and Opera */\r\n}\r\n`;\r\n\r\n\r\n\r\nconst blackGoldTheme = {\r\n  BACKGROUND_COLOR: \"#1a1a1a\",\r\n  TEXT_COLOR: \"#F8F8F8\",\r\n  HIGHLIGHT_COLOR: \"gold\",\r\n  BUTTON_TEXT_COLOR:\"#000\",\r\n  BUTTON_DISABLED_TEXT_COLOR:\"#333\",\r\n  BUTTON_ENABLED:\"gold\",\r\n  BUTTON_DISABLED:\"#666\"\r\n};\r\n/*\r\nconst silverTheme = {\r\n    BACKGROUND_COLOR: \"#e0e0e0\",\r\n    TEXT_COLOR: \"#1a1a1a\",\r\n    HIGHLIGHT_COLOR: \"#000\",\r\n    BUTTON_TEXT_COLOR:\"#000\",\r\n    BUTTON_ENABLED:\"#FFF\",\r\n    BUTTON_DISABLED:\"#333\"\r\n  };\r\n  */\r\n\r\nexport const theme = blackGoldTheme;\r\n\r\n\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components/macro\";\r\nimport { theme } from \"../theme\";\r\n\r\n\r\nimport React from \"react\";\r\n\r\nconst NavDiv = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  right:12px;\r\n  > ul {\r\n    margin:8px 0px 0px 0px;\r\n    text-align: left;\r\n    width: 60px;\r\n    > li {\r\n      display: inline-block;\r\n\r\n      margin:0px 0px 4px 10px;\r\n      > a {\r\n        color: darkgray;\r\n        font-size: 14px;\r\n        text-decoration: none;\r\n\r\n        &:hover {\r\n          color: ${props => theme.HIGHLIGHT_COLOR};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Nav: React.SFC = () => (\r\n  <NavDiv>\r\n    <ul>\r\n      <li>\r\n        <NavLink to={`${process.env.PUBLIC_URL}/game`} activeStyle={{ color: theme.HIGHLIGHT_COLOR }}>\r\n          Game\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to={`${process.env.PUBLIC_URL}/about`} activeStyle={{ color: theme.HIGHLIGHT_COLOR }}>\r\n          About\r\n        </NavLink>\r\n      </li>\r\n      {/*\r\n      <li>\r\n        <NavLink to=\"/todo\" activeStyle={{ color: \"white\" }}>\r\n          Todo\r\n        </NavLink>\r\n      </li>\r\n      */}\r\n    </ul>\r\n  </NavDiv>\r\n);\r\n\r\nexport default Nav;\r\n","import React from \"react\"\r\nimport styled  from \"styled-components/macro\"\r\nimport Nav from \"./Nav\";\r\nimport { theme } from \"../theme\";\r\n\r\nconst HeaderDiv = styled.div`\r\n\r\n  position: fixed;\r\n  top:0px;\r\n  z-index: 1;\r\n  background-color:  ${props => theme.BACKGROUND_COLOR};\r\n  display: inline-block;\r\n  width:100%;\r\n  \r\n \r\n  > div {\r\n    position:relative;\r\n    max-width: 600px;\r\n    margin:0 auto;\r\n    \r\n    height:60px;\r\n  }\r\n \r\n \r\n`;\r\nconst TitleDiv = styled.div`\r\nposition:absolute;\r\ntop:30px;\r\nleft:10px;\r\nfont-family: \"Yesteryear\", cursive;\r\n  color:${props => theme.HIGHLIGHT_COLOR};\r\n  text-align: left;\r\n  font-size: 50px;\r\n  /*line-height: 90px;*/\r\n`;\r\n\r\ninterface IProps {\r\n  title: string;\r\n}\r\n\r\nconst Header: React.SFC<IProps> = props => {\r\n  return <HeaderDiv>\r\n    <div>\r\n    <TitleDiv>{props.title}</TitleDiv>\r\n    <Nav/>\r\n    </div>\r\n    </HeaderDiv>;\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styled  from \"styled-components/macro\"\r\n\r\nconst DescDiv = styled.div`\r\n\r\n\tmargin-top:4px;\r\n\tline-height:20px;\r\n\t\r\n`\r\n\r\ntype IProps = {\r\n\tdescription:string\r\n}\r\n\r\nconst RoomDescription: React.SFC<IProps>  = ({ description }) => (\r\n\t<DescDiv>{description}</DescDiv>\r\n\t)\r\n\r\nRoomDescription.propTypes = {\r\n\tdescription: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default RoomDescription;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ImageDiv = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  padding-bottom: 36.3%;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  margin:0px 0px 10px 0px;\r\n`;\r\ninterface IProps {\r\n  path: string;\r\n  image: string;\r\n}\r\n\r\nconst RoomImage: React.SFC<IProps> = ({ path, image }) => {\r\n  const imagePath: any = \"url(\" + path + image + \")\";\r\n  console.log(imagePath)\r\n  return (\r\n    <ImageDiv style={{ backgroundImage: imagePath }} />\r\n  )\r\n\r\n}\r\n\r\n\r\nRoomImage.propTypes = {\r\n  path: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired\r\n};\r\n\r\nexport default RoomImage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled  from \"styled-components/macro\"\r\n\r\nconst MessageDiv = styled.div`\r\n    margin-top:10px;\r\n`;\r\n\r\ntype IProps = {\r\n\tmessage:string\r\n}\r\n\r\nconst Message: React.SFC<IProps>  = ({ message }) => (\r\n\t<MessageDiv>{message}</MessageDiv>\r\n\t)\r\n\r\n    Message.propTypes = {\r\n        message: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Message;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styled  from \"styled-components/macro\"\r\n\r\nconst LocationObjectsDiv = styled.div`\r\n    \tmargin-top:10px;\r\n\tmargin-bottom:10px;\r\n`;\r\ntype IProps = {\r\n\titems:any;\r\n}\r\n\r\nconst LocationObjects: React.SFC<IProps>   = ({ items = [] }) => {\r\n  const locationObjects = items\r\n    .filter((item: any) => {\r\n      return item.show !== false;\r\n    })\r\n    .map((item: any) => {\r\n      return item.desc;\r\n    })\r\n    .join(\", \");\r\n  return (\r\n    <LocationObjectsDiv>\r\n      <div>In this place :</div>\r\n      {locationObjects.length > 0 ? (\r\n        <div>{locationObjects}.</div>\r\n      ) : (\r\n        <div>Nothing of interest.</div>\r\n      )}\r\n    </LocationObjectsDiv>\r\n  );\r\n};\r\nLocationObjects.propTypes = {\r\n  items: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LocationObjects;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled  from \"styled-components/macro\"\r\n\r\nconst InventoryDiv= styled.div`\r\n\tmargin-top:10px;\r\n\tmargin-bottom:10px;\r\n`;\r\ntype IProps = {\r\n\titems:Array<any>;\r\n\tmoney:number;\r\n}\r\n\r\nconst Inventory: React.SFC<IProps>  = ({ items = [],money=0 }) => {\r\n\tconst inventory = items.map((item:any)=>{\r\n\t\treturn item.desc;\r\n\t}).join(\", \")+' and '+money+' coins.';\r\n\t\r\n\treturn (\r\n\t\r\n\t\t<InventoryDiv>\r\n\t\t<div>You are carrying :</div>\r\n\t\t<div>{inventory}</div>\r\n\t\t</InventoryDiv>\r\n\t\r\n\t)\r\n}\r\nInventory.propTypes = {\r\n\titems: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Inventory;\r\n\r\n","import styled from \"styled-components/macro\";\r\nimport { theme } from \"./theme\";\r\n\r\n\r\n\r\nexport const ActionButton = styled.button`\r\ndisplay: inline-block;\r\npadding: 3px 4px 2px 4px;\r\nmargin: 3px 5.9px 3px 0px;\r\nmin-width: 52px;\r\nborder: none;\r\nborder-radius: 2px;\r\nbackground-color: ${props => theme.BUTTON_ENABLED};\r\nfont-weight: bold;\r\nfont-size: inherit;\r\nletter-spacing: inherit;\r\ncolor: ${props => theme.BUTTON_TEXT_COLOR};\r\ncursor: pointer;\r\n&:disabled {\r\n  background-color: ${props => theme.BUTTON_DISABLED};\r\n  color: ${props => theme.BUTTON_DISABLED_TEXT_COLOR};\r\n}\r\n`;\r\n","\r\n\r\nexport const getRoomData = (roomId,rooms) => {\r\n    const roomData = rooms.filter(room => room.id===roomId)[0];\r\n    return roomData; \r\n  }\r\n\r\nexport const getInventory = (objects) => {\r\n    const inventory = objects.filter(object => object.loc==='INV').map(object => object);\r\n    return inventory;\r\n}\r\nexport const getLocationObjects= (roomId,objects) => {\r\n\t//return the whole object as may want to filter on visibility later\r\n\tconst locObjects = objects.filter(object => object.loc===roomId).map(object => object);\r\n    return locObjects;\r\n}\r\n\r\nexport const getAllowedExits =(roomData) => {\r\n\tconst allowedExits=[];\r\n\tObject.keys(roomData.exits).forEach(function(key) {\r\n\t\tvar val = roomData.exits[key];\r\n\t\tif(val!=='0'){\r\n\t\t\tallowedExits.push(key);\r\n\t\t}\r\n\t  });\r\n\treturn(allowedExits);\r\n}\r\nexport const getAllowedActions = (objects,actions,room,money) => {\r\n\r\n\tlet allowableActions= [];\r\n\t\tlet actionsToCheck = actions;\r\n\t\t// ONLY return actions that meet the conditions\r\n\t\tfor (let i = 0; i < actions.length; i++) {\r\n\t\t\tlet condition = actions[i].conditions;\r\n\t\t\t\r\n\t\t\tlet allowed = true;\r\n\t\t\t// Are Carrying Condition\r\n\t\t\tif (condition.hasOwnProperty('areCarrying')) {\r\n\t\t\t\tlet isCarrying = 0;\r\n\t\t\t\tfor (let j = 0; j < objects.length; j++) {\r\n\t\t\t\t\tfor (let k = 0; k < condition.areCarrying.length; k++) {\r\n\t\t\t\t\t\tif (condition.areCarrying[k] === objects[j].obj) {\r\n\t\t\t\t\t\t\tif (objects[j].loc === 'INV') {\r\n\t\t\t\t\t\t\t\tisCarrying++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (isCarrying !== condition.areCarrying.length) {\r\n\t\t\t\t\tallowed = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Room Contains Condition\r\n\t\t\tif (condition.hasOwnProperty('roomContains')) {\r\n\t\t\t\tlet roomContains = 0;\r\n\t\t\t\tfor (let j = 0; j < objects.length; j++) {\r\n\t\t\t\t\tfor (let k = 0; k < condition.roomContains.length; k++) {\r\n\t\t\t\t\t\tif (condition.roomContains[k] === objects[j].obj) {\r\n\t\t\t\t\t\t\tif (objects[j].loc === room) {\r\n\t\t\t\t\t\t\t\troomContains++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (roomContains !== condition.roomContains.length) {\r\n\t\t\t\t\tallowed = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Is specific location condition\r\n\t\t\tif (condition.hasOwnProperty('location')) {\r\n\t\t\t\tlet isValidLocation = false;\r\n\t\t\t\tif (condition.location === room) {\r\n\t\t\t\t\tisValidLocation = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (isValidLocation === false) {\r\n\t\t\t\t\tallowed = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Do you need money?\r\n\t\t\tif (condition.hasOwnProperty('haveMoney')) {\r\n\t\t\t\tlet hasMoney = false;\r\n\t\t\t\tif (money >= condition.haveMoney) {\r\n\t\t\t\t\thasMoney = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (hasMoney === false) {\r\n\t\t\t\t\tallowed = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (allowed === true) {\r\n\t\t\t\tallowableActions.push(actionsToCheck[i]);\r\n\t\t\t}\r\n\t\t\t\r\n\t}\t\r\n\t\treturn allowableActions;\r\n}","\r\n//export * from './actions_reddit';\r\n//import fetch from 'isomorphic-fetch'\r\n\r\nexport const INIT_DATA = 'INIT_DATA';\r\nexport const RESULT_MESSAGE ='RESULT_MESSAGE';\r\nexport const RESULT_ROLL= 'RESULT_ROLL';\r\nexport const RESULT_SCORE ='RESULT_SCORE';\r\nexport const RESULT_TAKE ='RESULT_TAKE';\r\nexport const RESULT_DROP = 'RESULT_DROP';\r\nexport const RESULT_LOCATION ='RESULT_LOCATION';\r\nexport const RESULT_DESTROY = 'RESULT_DESTROY';\r\nexport const RESULT_MONEY ='RESULT_MONEY';\r\nexport const RESULT_ROOM_DESC='RESULT_ROOM_DESC';\r\nexport const RESULT_CREATE_EXIT='RESULT_CREATE_EXIT';\r\nexport const RESTART='RESTART';\r\n\r\nexport function restart(){\r\n    return {\r\n        type:RESTART,\r\n        \r\n    }\r\n}\r\n\r\nexport function initData(data){\r\n    return {\r\n        type:INIT_DATA,\r\n        data: data,\r\n    }\r\n}\r\n\r\nexport function resultSuccessRoll(data){\r\n    console.log(data)\r\n    return {\r\n        type:RESULT_ROLL,\r\n        \r\n        data:data,\r\n    }\r\n}\r\n\r\nexport function resultMessage(data){\r\n    return {\r\n        type:RESULT_MESSAGE,\r\n        data:data,\r\n    }\r\n}\r\nexport function resultScore(data){\r\n    return {\r\n        type:RESULT_SCORE,\r\n        data:data,\r\n    }\r\n}\r\nexport function resultTake(data){\r\n    return {\r\n        type:RESULT_TAKE,\r\n        data:data,\r\n    }\r\n}\r\nexport function resultDrop(data){\r\n    return {\r\n        type:RESULT_DROP,\r\n        data:data,\r\n    }\r\n}\r\n\r\n\r\nexport function resultLocation(data){\r\n    return {\r\n        type:RESULT_LOCATION,\r\n        data:data,\r\n    }\r\n}\r\nexport function resultDestroy(data){\r\n    return {\r\n        type:RESULT_DESTROY,\r\n        data:data,\r\n    }\r\n}\r\n\r\nexport function resultMoney(data){\r\n    return {\r\n        type:RESULT_MONEY,\r\n        data:data,\r\n    }\r\n}\r\nexport function resultRoomDesc(data){\r\n    return {\r\n        type:RESULT_ROOM_DESC,\r\n        data:data,\r\n    }\r\n}\r\nexport function resultCreateExit(data){\r\n    return {\r\n        type:RESULT_CREATE_EXIT,\r\n        data:data,\r\n    }\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { ActionButton } from \"../styled-constants\";\r\nimport {\r\n  //getRoomData,\r\n  getAllowedActions,\r\n} from \"../utils/dataHelper\";\r\nimport {\r\n  resultSuccessRoll,\r\n  resultMessage,\r\n  resultScore,\r\n  resultTake,\r\n  resultDrop,\r\n  resultLocation,\r\n  resultDestroy,\r\n  resultMoney,\r\n  resultRoomDesc,\r\n  resultCreateExit,\r\n  restart\r\n} from \"../actions\";\r\n\r\ninterface IProps {\r\n  //rooms: Array<string>;\r\n  //room: any;\r\n  //objects:Array<string>;\r\n  \r\n  // money :number;\r\n // dispatch: Function;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Actions: React.SFC<IProps> =() => {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const objects:Array<string> = useSelector((state:any) => state.gameData.objects);\r\n  const actions:Array<string> = useSelector((state:any) => state.gameData.actions);\r\n  const room:any = useSelector((state:any) => state.gameData.room);\r\n  const money:number = useSelector((state:any) => state.gameData.money);\r\n\r\n   \r\n  const handleAction = (action:string) => (e:any) => {\r\n    e.preventDefault();\r\n\r\n    //const { objects, actions, room, money } = this.props;\r\n\r\n    const allowableActions = getAllowedActions(\r\n      objects,\r\n      actions,\r\n      room,\r\n      money\r\n    ).map(action => {\r\n      return action;\r\n    });\r\n    const results = allowableActions.filter(a => {\r\n      return a.action === action;\r\n    })[0].results;\r\n\r\n    for (var key of Object.keys(results)) {\r\n      dispatchResults(key, results[key]);\r\n    }\r\n  };\r\n  const dispatchResults = (key:string, data:any)=> {\r\n    \r\n    switch (key) {\r\n      case \"createExitOnRollSuccess\":\r\n        const roll = Math.ceil(Math.random() * data.sides);\r\n\r\n        //console.log(roll, data.sides);\r\n        if (roll === data.sides) {\r\n          dispatch(resultSuccessRoll(roll === data.sides));\r\n\r\n         dispatch(resultCreateExit(data));\r\n\r\n          //rollmMssage\r\n          dispatch(\r\n            resultMessage(\r\n              \"You rolled a \" +\r\n                roll +\r\n                \" from a \" +\r\n                data.sides +\r\n                \" sided dice. \" +\r\n                data.rollMessage\r\n            )\r\n          );\r\n        } else {\r\n          dispatch(\r\n            resultMessage(\r\n              \"You rolled a \" + roll + \" from a \" + data.sides + \" sided dice. \"\r\n            )\r\n          );\r\n        }\r\n\r\n        break;\r\n\r\n      case \"message\":\r\n        dispatch(resultMessage(data));\r\n        break;\r\n      case \"take\":\r\n        dispatch(resultTake(data));\r\n        break;\r\n      case \"drop\":\r\n       dispatch(resultDrop(data));\r\n        break;\r\n      case \"changeScore\":\r\n        dispatch(resultScore(data));\r\n        break;\r\n      case \"changeLocation\":\r\n        dispatch(resultLocation(data));\r\n        break;\r\n      case \"destroys\":\r\n        dispatch(resultDestroy(data));\r\n        break;\r\n      case \"addMoney\":\r\n        dispatch(resultMoney(data));\r\n        break;\r\n      case \"removeMoney\":\r\n        dispatch(resultMoney(-data));\r\n        break;\r\n      case \"changeRoomDesc\":\r\n        dispatch(resultRoomDesc(data));\r\n        break;\r\n      case \"createExit\":\r\n        dispatch(resultCreateExit(data));\r\n        break;\r\n      case \"restart\":\r\n        dispatch(restart());\r\n\r\n        break;\r\n      default:\r\n        console.warn(\"WARNING result = [\" + key + \"] is not being processed!\");\r\n    }\r\n  }\r\n  \r\n\r\n    //console.log('Actions rendered');\r\n    //const { objects, actions, rooms, room, money } = this.props;\r\n    //const currentRoomData = getRoomData(room, rooms);\r\n\r\n    const allowableActions = getAllowedActions(\r\n      objects,\r\n      actions,\r\n      room,\r\n      money\r\n    ).map(action => {\r\n      return action.action;\r\n    });\r\n\r\n    return (\r\n      <Fragment>\r\n    \r\n          {allowableActions.length > 0 &&\r\n            allowableActions.map((action, index) => {\r\n              return (\r\n                <ActionButton  key={index} onClick={handleAction(action)}>\r\n                  {action}\r\n                </ActionButton >\r\n              );\r\n            })}\r\n     \r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n\r\nexport default Actions;\r\n\r\n\r\n","import React, {  } from \"react\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { ActionButton } from \"../styled-constants\";\r\nimport { getRoomData, getAllowedExits } from \"../utils/dataHelper\";\r\nimport { resultMessage, resultLocation } from \"../actions\";\r\n\r\nconst ActionsDiv = styled.div`\r\n  display: inline-block;\r\n  vertical-align: top;\r\n`;\r\ninterface IProps {\r\n \r\n}\r\n\r\nconst ExploreActions: React.SFC<IProps> = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const room:any = useSelector((state:any) => state.gameData.room);\r\n  const rooms:Array<string> = useSelector((state:any) => state.gameData.rooms);\r\n\r\n  const handleMove = (exit: string) => (e: any) => {\r\n    //const { rooms, room } = this.props;\r\n\r\n    const currentRoomExits = getRoomData(room, rooms).exits;\r\n    e.preventDefault();\r\n    switch (exit) {\r\n      case \"Up\":\r\n        dispatch(resultLocation(currentRoomExits.u));\r\n        dispatch(resultMessage(\"You've travelled Up\"));\r\n        break;\r\n      case \"Down\":\r\n        dispatch(resultLocation(currentRoomExits.d));\r\n        dispatch(resultMessage(\"You've travelled Down\"));\r\n        break;\r\n      case \"North\":\r\n        dispatch(resultLocation(currentRoomExits.n));\r\n        dispatch(resultMessage(\"You've travelled North\"));\r\n        break;\r\n      case \"South\":\r\n        dispatch(resultLocation(currentRoomExits.s));\r\n        dispatch(resultMessage(\"You've travelled South\"));\r\n        break;\r\n      case \"West\":\r\n        dispatch(resultLocation(currentRoomExits.w));\r\n        dispatch(resultMessage(\"You've travelled West\"));\r\n        break;\r\n      case \"East\":\r\n        dispatch(resultLocation(currentRoomExits.e));\r\n        dispatch(resultMessage(\"You've travelled East\"));\r\n        break;\r\n      default:\r\n        console.warn(\"WARNING - EXIT = [\" + exit + \"] is not being processed!\");\r\n    }\r\n  };\r\n\r\n  const renderExits = (currentRoomData: any) => {\r\n    //console.log(currentRoomData);\r\n    const unsortedExits = getAllowedExits(currentRoomData).map(exit => {\r\n      if (exit === \"n\") return \"North\";\r\n      if (exit === \"e\") return \"East\";\r\n      if (exit === \"s\") return \"South\";\r\n      if (exit === \"w\") return \"West\";\r\n\r\n      if (exit === \"u\") return \"Up\";\r\n      if (exit === \"d\") return \"Down\";\r\n      return null;\r\n    });\r\n    //However the data arrive always show n,s,w,e,u,d\r\n    const potentialExits = [\"North\", \"East\", \"South\", \"West\", \"Up\", \"Down\"];\r\n    const allowableExits = unsortedExits.filter((exit: any) => {\r\n      return potentialExits.includes(exit);\r\n    });\r\n\r\n    return (\r\n      <ActionsDiv>\r\n        <div\r\n          style={{\r\n            width: \"140px\",\r\n            display: \"inline-block\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <div>\r\n            {allowableExits.includes(\"North\")\r\n              ? renderOpenExit(\"North\")\r\n              : renderClosedExit(\"North\")}\r\n          </div>\r\n          <div style={{ display: \"inline-block\", width: \"40%\" }}>\r\n            {allowableExits.includes(\"West\")\r\n              ? renderOpenExit(\"West\")\r\n              : renderClosedExit(\"West\")}\r\n          </div>\r\n          <div style={{ display: \"inline-block\", width: \"40%\" }}>\r\n            {allowableExits.includes(\"East\")\r\n              ? renderOpenExit(\"East\")\r\n              : renderClosedExit(\"East\")}\r\n          </div>\r\n          <div>\r\n            {allowableExits.includes(\"South\")\r\n              ? renderOpenExit(\"South\")\r\n              : renderClosedExit(\"South\")}\r\n          </div>\r\n          <div style={{ display: \"inline-block\", width: \"40%\" }}>\r\n            {allowableExits.includes(\"Up\")\r\n              ? renderOpenExit(\"Up\")\r\n              : renderClosedExit(\"Up\")}\r\n          </div>\r\n          <div style={{ display: \"inline-block\", width: \"40%\" }}>\r\n            {allowableExits.includes(\"Down\")\r\n              ? renderOpenExit(\"Down\")\r\n              : renderClosedExit(\"Down\")}\r\n          </div>\r\n        </div>\r\n      </ActionsDiv>\r\n    );\r\n    //}\r\n  };\r\n  const renderOpenExit = (exit: string) => {\r\n    return (\r\n      <ActionButton key={exit} onClick={handleMove(exit)}>\r\n        {exit}\r\n      </ActionButton>\r\n    );\r\n  };\r\n  const renderClosedExit = (exit: string) => {\r\n    return (\r\n      <ActionButton key={exit} disabled={true}>\r\n        {exit}\r\n      </ActionButton>\r\n    );\r\n  };\r\n\r\n\r\n  const currentRoomData = getRoomData(room, rooms);\r\n\r\n  return (\r\n    <>{renderExits(currentRoomData)}</>\r\n    )\r\n  }\r\n\r\n\r\nexport default ExploreActions;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { debounce } from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst canvasPath = \"url('\"+process.env.PUBLIC_URL+\"/assets/theshivers/images/game_bg.jpg')\"\r\nconsole.log(canvasPath)\r\nconst WorldMapDiv = styled.div`\r\n    > canvas {\r\n      border-radius: 10px;\r\n      display: inline;\r\n      background-image: ${canvasPath}\r\n    }\r\n  `;\r\n\r\ninterface IProps {\r\n  room: any;\r\n  rooms: Array<any>;\r\n  discoveredPaths: Array<any>;\r\n}\r\n\r\nconst WorldMap: React.SFC<IProps> = ({ room, rooms, discoveredPaths }) => {\r\n\r\n\r\n  const canvasRef = useRef<any>();\r\n  const mapContainerRef = useRef<any>();\r\n  const [mapWidth, setMapWidth] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const updateCanvasDebounce = debounce(() => {\r\n      if (!mapContainerRef.current) {\r\n        //TODO why is mapContainerRef sometimes missing?\r\n        return;\r\n      }\r\n      setMapWidth(Math.max(Math.min(mapContainerRef.current.offsetWidth, 160), 100));\r\n    }, 40);\r\n\r\n    updateCanvasDebounce()\r\n    window.addEventListener(\"resize\", updateCanvasDebounce);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateCanvasDebounce);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateCanvasCalc = () => {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      const visitedRooms = rooms.filter((room: any) => {\r\n        if (discoveredPaths.includes(room.id)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n\r\n      canvasRef.current.width = mapWidth;\r\n      canvasRef.current.height = mapWidth;\r\n      //Named rooms are expected to be hidden. Only numbered rooms should appear on map\r\n\r\n      const spacing = mapWidth / 5;\r\n      const middle = spacing / 2;\r\n\r\n      //Cutout circle\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.fillRect(0, 0, mapWidth, mapWidth);\r\n      ctx.save();\r\n      ctx.globalCompositeOperation = \"destination-out\";\r\n      ctx.beginPath();\r\n\r\n      //Swap out if i want to revert to a circular map\r\n      //ctx.arc(width / 2, width / 2, width / 2, 0, Math.PI * 2, true);\r\n      ctx.fillRect(0, 0, mapWidth, mapWidth);\r\n      ctx.fill();\r\n      ctx.restore();\r\n      ctx.strokeStyle = \"#333\";\r\n      ctx.setLineDash([1, 5]);\r\n\r\n      //DRAW ROOM LINKS\r\n\r\n      for (let room of visitedRooms) {\r\n        const grid = parseInt(room.id, 10);\r\n        if (grid > 10) {\r\n          const x = Math.floor(grid / 10) * spacing + middle;\r\n          const y = (grid % 10) * spacing + middle;\r\n          const exits: Array<any> = Object.values(room.exits)\r\n          for (let exit of exits) {\r\n            const exitVal = parseInt(exit, 10);\r\n            if (exitVal > 10) {\r\n              const xE = Math.floor(exitVal / 10) * spacing + middle;\r\n              const yE = (exitVal % 10) * spacing + middle;\r\n              ctx.moveTo(x / 2, y / 2);\r\n              ctx.lineTo(xE / 2, yE / 2);\r\n              ctx.stroke();\r\n            }\r\n          };\r\n        }\r\n      };\r\n      //DRAW PLAYER POSTION\r\n      if (room > 10) {\r\n        //Player\r\n        const x = Math.floor(room / 10) * spacing + middle;\r\n        const y = (room % 10) * spacing + middle;\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"rgba(0, 0, 0, 0)\";\r\n        ctx.arc(x / 2, y / 2, spacing / 6, 0, 2 * Math.PI);\r\n        ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n      }\r\n      //DARKEN UNVISITED ROOMS\r\n      for (let x = 0; x < 10; x++) {\r\n        for (let y = 0; y < 10; y++) {\r\n          const visited =\r\n            visitedRooms.filter(room => {\r\n              return parseInt(room.id) === x * 10 + y;\r\n            }).length === 1;\r\n          if (!visited) {\r\n            ctx.save();\r\n            ctx.shadowBlur = 30;\r\n            ctx.shadowColor = \"black\";\r\n            ctx.fillStyle = \"rgba(0, 0, 0,0.1)\";\r\n            ctx.fillRect(\r\n              ((x - 1) * spacing) / 2 - spacing / 4 + spacing / 2 + middle / 2,\r\n              (y * spacing) / 2 - spacing / 4 + middle / 2,\r\n              spacing / 2,\r\n              spacing / 2\r\n            );\r\n            ctx.restore();\r\n          }\r\n        }\r\n      }\r\n    };\r\n    updateCanvasCalc();\r\n  }, [mapWidth, room, canvasRef, discoveredPaths, rooms]);\r\n\r\n  return (\r\n    <WorldMapDiv ref={mapContainerRef}>\r\n      <canvas ref={canvasRef} />\r\n    </WorldMapDiv>\r\n  );\r\n}\r\n\r\nexport default WorldMap;\r\n","import React, {  } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport RoomDescription from \"../components/RoomDescription\";\r\nimport RoomImage from \"../components/RoomImage\";\r\nimport Message from \"../components/Message\";\r\nimport LocationObjects from \"../components/LocationObjects\";\r\nimport Inventory from \"../components/Inventory\";\r\nimport Actions from \"../components/GameActions\";\r\nimport ExploreActions from \"../components/ExploreActions\";\r\nimport WorldMap from \"../components/WorldMap\";\r\n//import Debug from '../components/Debug';\r\n\r\n//import './Home.css';\r\n\r\nimport {\r\n  getRoomData,\r\n  getInventory,\r\n  //getAllowedActions,\r\n  //getAllowedExits,\r\n  getLocationObjects\r\n} from \"../utils/dataHelper\";\r\n\r\n/*\r\nThe project was built assuming it is hosted at the server root.\r\nYou can control this with the homepage field in your package.json.\r\nFor example, add this to build it for GitHub Pages:\r\n\r\n  \"homepage\" : \"http://myname.github.io/myapp\",\r\n*/\r\n//npm run build\r\n//yarn global add serve\r\n//yarn - s serve\r\n//http://localhost:5000\r\n\r\nconst HomeDiv = styled.div`\r\n  max-width: 600px;\r\n\r\n  margin: 70px auto 0px auto;\r\n  @media only screen and (min-width: 600px) {\r\n    /* wider */\r\n  }\r\n`;\r\nconst TextPanelDiv = styled.div`\r\n`;\r\nconst MapContainerDiv = styled.div`\r\n  display: inline-block;\r\n  width: calc(100% - 150px);\r\n  /*width:120px;*/\r\n  vertical-align:top;\r\n\r\n  @media only screen and (min-width: 600px) {\r\n    /* wider */\r\n    >div {\r\n  \r\n    }\r\n  }\r\n`;\r\nconst ImageContainerDiv = styled.div`\r\n display: inline-block;\r\n  /*width:72%;*/\r\n  width:100%;\r\n`\r\n\r\ninterface IProps {\r\n \r\n}\r\n\r\n\r\nconst Game: React.FC = (data: any) => {\r\n\r\n  const objects:Array<string> = useSelector((state:any) => state.gameData.objects);\r\n  const room:any = useSelector((state:any) => state.gameData.room);\r\n  const money:number = useSelector((state:any) => state.gameData.money);\r\n  const rooms:Array<string> = useSelector((state:any) => state.gameData.rooms);\r\n  const discoveredPaths:any = useSelector((state:any) => state.gameData.discoveredPaths);\r\n  const lastMessage:string = useSelector((state:any) => state.gameData.lastMessage);\r\n \r\n\r\n  const getDescription = (roomData: any) => {\r\n    if (roomData && roomData.desc && roomData.desc.length) {\r\n      return roomData.desc[0];\r\n    } else {\r\n      console.log(\"NO roomData desc for \" + roomData);\r\n    }\r\n  }\r\n  const getImage = (roomData: any) => {\r\n    if (roomData && roomData.image) {\r\n      return roomData.image;\r\n    } else {\r\n      console.log(\"NO roomData image for \" + roomData);\r\n    }\r\n  }\r\n\r\n\r\n  //Dont Allow rendering if data is empty\r\n  if (rooms.length === 0) {\r\n    return <p>NOT LOADED</p>;\r\n  }\r\n  const currentRoomData = getRoomData(room, rooms);\r\n  const description = getDescription(currentRoomData);\r\n  const locationObjects = getLocationObjects(room, objects);\r\n  const image = getImage(currentRoomData);\r\n  const inventory = getInventory(objects);\r\n\r\n  //TODO assets folder will be switchable later\r\n  const assetsFolder = \"theshivers\";\r\n\r\n  //TODO - I shouldnt need to worry about local paths? Is webpack misconfigured?\r\n  //const isLocal = window.location.href.substr(7, 9) === \"localhost\";\r\n\r\n\r\n\r\n  return (\r\n    <HomeDiv>\r\n\r\n      <ImageContainerDiv>\r\n        {/*\r\n        {isLocal ? (\r\n          <RoomImage\r\n            path={\"../assets/\" + assetsFolder + \"/images/\"}\r\n            image={image}\r\n          />\r\n        ) : (\r\n            <RoomImage\r\n              path={\"/shivers-react/assets/\" + assetsFolder + \"/images/\"}\r\n              image={image}\r\n            />\r\n          )}\r\n        */}\r\n         <RoomImage\r\n            path={process.env.PUBLIC_URL+\"/assets/\" + assetsFolder + \"/images/\"}\r\n            image={image}\r\n          />\r\n      </ImageContainerDiv>\r\n \r\n      \r\n      <div style={{ display: 'inline-block', width: \"150px\" }}>\r\n        <ExploreActions />\r\n      </div>\r\n      <MapContainerDiv>\r\n        <div style={{textAlign:\"right\"}}>\r\n          <WorldMap\r\n            discoveredPaths={discoveredPaths}\r\n            room={room}\r\n            rooms={rooms}\r\n          />\r\n        </div>\r\n      </MapContainerDiv>\r\n\r\n      <Actions />\r\n      <TextPanelDiv>\r\n        <Message message={lastMessage} />\r\n        <RoomDescription description={description} />\r\n        <LocationObjects items={locationObjects} />\r\n        <Inventory items={inventory} money={money} />\r\n      </TextPanelDiv>\r\n      {/*<Debug data=\"TEST\"/>*/}\r\n\r\n    </HomeDiv>\r\n  );\r\n\r\n}\r\n\r\nexport default Game;\r\n","import React, { useEffect } from \"react\";\r\nimport {  useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { ActionButton } from \"../styled-constants\";\r\nimport { restart } from \"../actions\";\r\n\r\nconst PageDiv = styled.div`\r\n  max-width: 600px;\r\n  margin: 70px auto 0px auto;\r\n  padding: 10px;\r\n  > p {\r\n    line-height: 20px;\r\n    margin-block-start: 1px;\r\n    margin-block-end: 3px;\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  dispatch: Function;\r\n}\r\ninterface IState {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst About: React.FC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [width, setWidth] = React.useState(0);\r\n  const [height, setHeight] = React.useState(0);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n\r\n      setWidth(window.innerWidth);\r\n      setHeight(window.innerHeight);\r\n    };\r\n    updateWindowDimensions();\r\n\r\n    window.addEventListener(\"resize\", updateWindowDimensions);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateWindowDimensions);\r\n    }\r\n  }, [])\r\n\r\n\r\n  const handleRestart = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(restart())\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <PageDiv>\r\n      <div style={{ background: \"#333\", padding:\"10px\" , borderRadius:\"4px\"}}>\r\n        <h2>Game Engine For Interactive Fiction</h2>\r\n        <p>By Mark Horsell</p>\r\n        </div>\r\n        <br />\r\n        <div style={{ background: \"#333\", padding:\"10px\" , borderRadius:\"4px\"}}>\r\n        <h3>Version 2.1.1 : 27 September 2019</h3>\r\n        <p>Redux connect replaced with useDispatch and useSelector Hooks.</p>\r\n        <br />\r\n        <h3>Version 2.1.0 : 25 September 2019</h3>\r\n        <p>Now uses 100% Functional Components with Hooks - All Classes and Lifecycle methods removed.</p>\r\n        <br />\r\n        <h3>Version 2.0.0 : 24 March 2019</h3>\r\n        <p>Converted from JavaScript to TypeScript and from Inline-CSS to Styled-components.</p>\r\n        <br />\r\n        <h3>Version 1.0.3 : May 2018</h3>\r\n        <p>Class Based, Inline-CSS, React Router, Redux.</p>\r\n        </div>\r\n        <br />\r\n        <div style={{ background: \"#333\",padding:\"10px\" , borderRadius:\"4px\" }}>\r\n          <h3>Debug Info</h3>\r\n          <p>URL : {window.location.href}</p>\r\n          <p>PUBLIC_URL : {process.env.PUBLIC_URL}</p>\r\n          <p>\r\n            W : {width} | H : {height}\r\n          </p>\r\n          <p>React Version : {React.version} </p>\r\n        </div>\r\n        <br />\r\n        {/*\r\n      <p>An editor is available here ------</p>\r\n      <p>Strict mode wraps Home and About - Wrapping App will create warnings as either Provider or Router Libraries are not Strict as yet</p>\r\n  */}\r\n\r\n<div style={{ background: \"#333\",padding:\"10px\" , borderRadius:\"4px\" }}>\r\n        <p>\r\n          WARNING : RESETTING GAME WILL CLEAR ALL DATA AND IS NOT UNDOABLE\r\n          </p>\r\n        <ActionButton onClick={handleRestart}>Reset game</ActionButton>\r\n        </div>\r\n      </PageDiv>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default About;\r\n","import React, { } from \"react\";\r\n\r\nimport styled  from \"styled-components/macro\";\r\n\r\nconst PageDiv = styled.div`\r\n  max-width: 600px;\r\n\r\n  margin: 70px auto 0px auto;\r\n padding:10px;\r\n`;\r\n\r\nconst DoneP=styled.p`\r\n  text-decoration: line-through;\r\n`;\r\n\r\n\r\nconst Todo: React.FC = () => {\r\n  \r\n  \r\n    return (\r\n      <PageDiv>\r\n      <p>The carver now makes a dice from the bone</p>\r\n       <p>Once rolled a 6 the monster shows you an exit so you can find the mouthpiece</p>\r\n        <DoneP>Add styled-components</DoneP>\r\n        <p>Remove css and convert to styled-c</p>\r\n        <p>Fix the styling - make iphone 5 compatible</p>\r\n        <DoneP>Add Typescripy</DoneP>\r\n        <p>Fully convert to typescript</p>\r\n        <DoneP>Fix map connection rendering</DoneP>\r\n        <DoneP>Update to lastest packages</DoneP>\r\n        <p>Add Dice roll option to fight monster</p>\r\n        <p>Add typein option for puzzles or riddle answers</p>\r\n        <p>Add Health Meter</p>\r\n        <p>\r\n          could eating posioned mushrooms cause confusion so that directions\r\n          appear as Worth, Sest, Eouth, Nest and go in random directions\r\n        </p>\r\n        <p>bump up to version 2.0</p>\r\n      </PageDiv>\r\n    );\r\n  }\r\n\r\n\r\nexport default Todo;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { GlobalStyles, theme } from \"./theme\";\r\nimport /*styled,*/ { ThemeProvider } from \"styled-components/macro\";\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\n//import data from './assets/theshivers/data.json';\r\n\r\nimport Header from \"./components/Header\";\r\nimport Game from \"./pages/Game\";\r\nimport About from \"./pages/About\";\r\nimport Todo from \"./pages/Todo\";\r\n\r\nimport {\r\n  // initData,\r\n  restart\r\n} from \"./actions\";\r\n\r\ninterface IProps {\r\n  //gameTitle: string;\r\n  //dispatch: Function;\r\n  //propTypes: any;\r\n}\r\n\r\n//class App extends Component<IProps> {\r\n\r\n  const App: React.SFC<IProps> = () => {\r\n \r\n  const dispatch = useDispatch()\r\n  const gameTitle = useSelector((state:any) => state.gameData.gameTitle);\r\n  useEffect(()=>{\r\n    if (gameTitle) {\r\n      //Alreay has gameTitle so must have come from persist\r\n      //console.log(\"game data from cache\");\r\n    } else {\r\n      dispatch(restart());\r\n    }\r\n  });\r\n  return(\r\n      <ThemeProvider theme={theme}>\r\n      <>\r\n      <GlobalStyles/>\r\n      <Router>\r\n        <div>\r\n          {gameTitle &&\r\n          <>\r\n          <Header title={gameTitle} />\r\n          <Switch>\r\n            <Route path={`${process.env.PUBLIC_URL}/game`} component={Game} />\r\n            <Route path={`${process.env.PUBLIC_URL}/about`} component={About} />\r\n            <Route path={`${process.env.PUBLIC_URL}/todo`} component={Todo} />\r\n            <Redirect from={`${process.env.PUBLIC_URL}/`} to={`${process.env.PUBLIC_URL}/game`} />\r\n            <Redirect from={`/`} to={`${process.env.PUBLIC_URL}/game`} />\r\n            {`${process.env.PUBLIC_URL}/about`}\r\n          </Switch>\r\n          </>\r\n          }\r\n          {!gameTitle &&\r\n            <div>Not Loaded...</div>\r\n          }\r\n          \r\n        </div>\r\n      </Router>\r\n      </>\r\n      </ThemeProvider>\r\n   \r\n    );\r\n  }\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { gameData} from './ioReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  gameData,\r\n \r\n  })\r\n  \r\n  export default rootReducer","import {\r\n  //INIT_DATA,\r\n  RESULT_ROLL,\r\n  RESULT_MESSAGE,\r\n  RESULT_SCORE,\r\n  RESULT_TAKE,\r\n  RESULT_DROP,\r\n  RESULT_LOCATION,\r\n  RESULT_DESTROY,\r\n  RESULT_MONEY,\r\n  RESULT_ROOM_DESC,\r\n  RESULT_CREATE_EXIT,\r\n  RESTART\r\n} from \"../actions\";\r\n\r\nimport initialData from \"../assets/theshivers/data.json\";\r\n\r\n\r\nexport function gameData(state = {}, action) {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      //RestartData needs to be a copy not a reference!\r\n      const restartData = JSON.parse(JSON.stringify(initialData));\r\n\r\n      return {\r\n        ...state,\r\n        gameTitle: restartData.gameTitle,\r\n        score: restartData.score,\r\n        money: restartData.money,\r\n        room: restartData.room,\r\n        lastMessage: restartData.lastMessage,\r\n        discoveredPaths: restartData.discoveredPaths,\r\n        move: restartData.move,\r\n        rooms: restartData.rooms,\r\n        actions: restartData.actions,\r\n        objects: restartData.objects\r\n      };\r\n\r\n    case RESULT_MESSAGE:\r\n      return {\r\n        ...state,\r\n        lastMessage: action.data\r\n      };\r\n    case RESULT_ROLL: \r\n    //console.log('RESULT_ROLL'+action.data)\r\n      return {\r\n        ...state,\r\n        roll: action.data\r\n    }\r\n    case RESULT_SCORE:\r\n      return {\r\n        ...state,\r\n        score: state.score + action.data\r\n      };\r\n    case RESULT_TAKE:\r\n      const updatedObjects = state.objects.map(obj => {\r\n        action.data.forEach(element => {\r\n          if (obj.obj === element) {\r\n            obj.loc = \"INV\";\r\n          }\r\n        });\r\n        return obj;\r\n      });\r\n      return {\r\n        ...state,\r\n        objects: [...updatedObjects]\r\n      };\r\n    case RESULT_DROP:\r\n      const droppedObjects = state.objects.map(obj => {\r\n        action.data.forEach(element => {\r\n          if (obj.obj === element) {\r\n            obj.loc = state.room;\r\n          }\r\n        });\r\n        return obj;\r\n      });\r\n      return {\r\n        ...state,\r\n        objects: [...droppedObjects]\r\n      };\r\n    case RESULT_LOCATION:\r\n      const paths = state.discoveredPaths.concat();\r\n      if (paths.indexOf(action.data) === -1) {\r\n        paths.push(action.data);\r\n      }\r\n      return {\r\n        ...state,\r\n        room: action.data,\r\n        discoveredPaths: paths\r\n      };\r\n    case RESULT_DESTROY:\r\n      const updatedDestroyObjects = state.objects.map(obj => {\r\n        action.data.forEach(element => {\r\n          if (obj.obj === element || element === \"ALL\") {\r\n            obj.loc = \"\";\r\n          }\r\n        });\r\n\r\n        return obj;\r\n      });\r\n      return {\r\n        ...state,\r\n        objects: [...updatedDestroyObjects]\r\n      };\r\n    case RESULT_MONEY:\r\n      return {\r\n        ...state,\r\n        money: state.money + action.data\r\n      };\r\n    case RESULT_ROOM_DESC:\r\n      const rooms = state.rooms.map(r => {\r\n        if (r.id === state.room) {\r\n          r.desc = action.data;\r\n        }\r\n        return r;\r\n      });\r\n      return {\r\n        ...state,\r\n        rooms: [...rooms]\r\n      };\r\n    case RESULT_CREATE_EXIT:\r\n      const roomExits = state.rooms.map(r => {\r\n        if (r.id === state.room) {\r\n          if (action.data.dir === \"e\") {\r\n            r.exits.e = action.data.toRoom;\r\n          }\r\n          if (action.data.dir === \"w\") {\r\n            r.exits.w = action.data.toRoom;\r\n          }\r\n          if (action.data.dir === \"n\") {\r\n            r.exits.n = action.data.toRoom;\r\n          }\r\n          if (action.data.dir === \"s\") {\r\n            r.exits.s = action.data.toRoom;\r\n          }\r\n        }\r\n        return r;\r\n      });\r\n      return {\r\n        ...state,\r\n        rooms: [...roomExits]\r\n      };\r\n    case (action.type.match(/^@@redux/) || {}).input:\r\n    case (action.type.match(/^@@INIT/) || {}).input:\r\n      // console.log('BUILT IN '+action.type);\r\n      return state;\r\n\r\n    default:\r\n      //  console.log('REDUCER DIDNT PROCESS [' + action.type + ']');\r\n      return state;\r\n  }\r\n}\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\n\r\n\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\nimport rootReducer from '../reducers';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\nconst persistor = persistStore(store);\r\nexport default {store, persistor};\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n//import './index.css';\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/configureStore\";\r\n//import persistor  from './store/configureStore';\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nrender(\r\n  <React.StrictMode>\r\n  <Provider store={store.store as any}>\r\n    <PersistGate loading={null} persistor={store.persistor}>\r\n   \r\n      <App />\r\n    </PersistGate>\r\n  </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}