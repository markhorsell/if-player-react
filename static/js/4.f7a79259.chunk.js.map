{"version":3,"sources":["components/Nav.tsx","components/Header.tsx","components/RoomDescription.tsx","components/RoomImage.tsx","components/Message.tsx","components/LocationObjects.tsx","components/Inventory.tsx","styled-constants.tsx","utils/dataHelper.tsx","components/GameActions.tsx","components/ExploreActions.tsx","components/WorldMap.tsx","pages/Game.tsx","pages/About.tsx","pages/Todo.tsx","AppContent.tsx"],"names":["NavDiv","styled","div","props","theme","HIGHLIGHT_COLOR","Nav","to","process","activeStyle","color","HeaderDiv","BACKGROUND_COLOR","TitleDiv","Header","title","DescDiv","RoomDescription","description","ImageDiv","RoomImage","imagePath","path","image","style","backgroundImage","MessageDiv","Message","message","LocationObjectsDiv","LocationObjects","items","locationObjects","filter","item","show","map","desc","join","length","InventoryDiv","Inventory","money","inventory","ActionButton","button","BUTTON_ENABLED","BUTTON_TEXT_COLOR","BUTTON_DISABLED","BUTTON_DISABLED_TEXT_COLOR","getRoomData","roomId","rooms","room","id","getAllowedActions","actions","roomID","allowableActions","actionsToCheck","i","condition","conditions","allowed","hasOwnProperty","isCarrying","j","k","areCarrying","obj","loc","roomContains","isValidLocation","location","hasMoney","haveMoney","push","action","Actions","dispatch","useDispatch","objects","useSelector","state","gameData","dispatchResults","gameActionName","data","roll","Math","ceil","random","sides","resultSuccessRoll","resultCreateExit","dir","toRoom","resultMessage","rollMessage","resultTake","resultDrop","resultScore","resultLocation","resultDestroy","resultMoney","resultRoomDesc","restart","console","warn","index","key","onClick","e","preventDefault","results","a","log","Object","keys","ActionsDiv","ExploreActions","handleMove","exit","currentRoomExits","exits","u","d","n","s","w","renderOpenExit","renderClosedExit","disabled","currentRoomData","unsortedExits","roomData","allowedExits","forEach","getAllowedExits","potentialExits","allowableExits","includes","width","display","textAlign","renderExits","WorldMapDiv","WorldMap","discoveredPaths","canvasRef","useRef","mapContainerRef","useState","mapWidth","setMapWidth","useEffect","updateCanvasDebounce","debounce","current","max","min","offsetWidth","window","addEventListener","removeEventListener","getContext","ctx","visitedRooms","height","spacing","middle","fillStyle","fillRect","save","globalCompositeOperation","beginPath","fill","restore","strokeStyle","setLineDash","grid","parseInt","x","floor","y","values","exitVal","xE","yE","moveTo","lineTo","stroke","roomNumber","Number","arc","PI","shadowBlur","shadowColor","updateCanvasCalc","ref","HomeDiv","TextPanelDiv","MapContainerDiv","ImageContainerDiv","Game","lastMessage","getImage","getInventory","PageDiv","About","React","setWidth","setHeight","updateWindowDimensions","innerWidth","innerHeight","StrictMode","background","padding","borderRadius","href","version","DoneP","p","Todo","AppContent","gameTitle","component"],"mappings":"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","file":"static/js/4.f7a79259.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components/macro\";\r\nimport { theme } from \"../theme\";\r\n\r\n\r\nimport React from \"react\";\r\n\r\nconst NavDiv = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  right:12px;\r\n  > ul {\r\n    margin:8px 0px 0px 0px;\r\n    text-align: left;\r\n    width: 60px;\r\n    > li {\r\n      display: inline-block;\r\n\r\n      margin:0px 0px 4px 10px;\r\n      > a {\r\n        color: darkgray;\r\n        font-size: 14px;\r\n        text-decoration: none;\r\n\r\n        &:hover {\r\n          color: ${props => theme.HIGHLIGHT_COLOR};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Nav: React.SFC = () => (\r\n  <NavDiv>\r\n    <ul>\r\n      <li>\r\n        <NavLink to={`${process.env.PUBLIC_URL}/game`} activeStyle={{ color: theme.HIGHLIGHT_COLOR }}>\r\n          Game\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to={`${process.env.PUBLIC_URL}/about`} activeStyle={{ color: theme.HIGHLIGHT_COLOR }}>\r\n          About\r\n        </NavLink>\r\n      </li>\r\n      {/*\r\n      <li>\r\n        <NavLink to=\"/todo\" activeStyle={{ color: \"white\" }}>\r\n          Todo\r\n        </NavLink>\r\n      </li>\r\n      */}\r\n    </ul>\r\n  </NavDiv>\r\n);\r\n\r\nexport default Nav;\r\n","import React from \"react\"\r\nimport styled  from \"styled-components/macro\"\r\nimport Nav from \"./Nav\";\r\nimport { theme } from \"../theme\";\r\n\r\nconst HeaderDiv = styled.div`\r\n\r\n  position: fixed;\r\n  top:0px;\r\n  z-index: 1;\r\n  background-color:  ${props => theme.BACKGROUND_COLOR};\r\n  display: inline-block;\r\n  width:100%;\r\n  \r\n \r\n  > div {\r\n    position:relative;\r\n    max-width: 600px;\r\n    margin:0 auto;\r\n    \r\n    height:60px;\r\n  }\r\n \r\n \r\n`;\r\nconst TitleDiv = styled.div`\r\nposition:absolute;\r\ntop:30px;\r\nleft:10px;\r\nfont-family: \"Yesteryear\", cursive;\r\n  color:${props => theme.HIGHLIGHT_COLOR};\r\n  text-align: left;\r\n  font-size: 50px;\r\n  /*line-height: 90px;*/\r\n`;\r\n\r\ninterface IProps {\r\n  title: string;\r\n}\r\n\r\nconst Header: React.SFC<IProps> = props => {\r\n  return <HeaderDiv>\r\n    <div>\r\n    <TitleDiv>{props.title}</TitleDiv>\r\n    <Nav/>\r\n    </div>\r\n    </HeaderDiv>;\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styled  from \"styled-components/macro\"\r\n\r\nconst DescDiv = styled.div`\r\n\r\n\tmargin-top:4px;\r\n\tline-height:20px;\r\n`;\r\n\r\ntype IProps = {\r\n\tdescription:string\r\n}\r\n\r\nconst RoomDescription: React.SFC<IProps>  = ({ description }) => (\r\n\t<DescDiv>{description}</DescDiv>\r\n\t)\r\n\r\nRoomDescription.propTypes = {\r\n\tdescription: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default RoomDescription;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ImageDiv = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  padding-bottom: 36.3%;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  margin:0px 0px 10px 0px;\r\n`;\r\ninterface IProps {\r\n  path: string;\r\n  image: string;\r\n}\r\n\r\nconst RoomImage: React.SFC<IProps> = ({ path, image }) => {\r\n  const imagePath: string = \"url(\" + path + image + \")\";\r\n  return (\r\n    <ImageDiv style={{ backgroundImage: imagePath }} />\r\n  )\r\n\r\n}\r\n\r\n\r\nRoomImage.propTypes = {\r\n  path: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired\r\n};\r\n\r\nexport default RoomImage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components/macro\"\r\n\r\nconst MessageDiv = styled.div`\r\n    margin-top:10px;\r\n`;\r\n\r\ntype IProps = {\r\n    message: string\r\n}\r\n\r\nconst Message: React.SFC<IProps> = ({ message }) => (\r\n    <MessageDiv>{message}</MessageDiv>\r\n)\r\n\r\nMessage.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Message;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {  IItem } from \"../types\"\r\nimport styled  from \"styled-components/macro\"\r\n\r\nconst LocationObjectsDiv = styled.div`\r\n    \tmargin-top:10px;\r\n\tmargin-bottom:10px;\r\n`;\r\ntype IProps = {\r\n\titems:Array<IItem>;\r\n}\r\n\r\nconst LocationObjects: React.SFC<IProps>   = ({ items = [] }) => {\r\n  const locationObjects = items\r\n    .filter((item: IItem ) => {\r\n      return item.show !== false;\r\n    })\r\n    .map((item: IItem ) => {\r\n      return item.desc;\r\n    })\r\n    .join(\", \");\r\n  return (\r\n    <LocationObjectsDiv>\r\n      <div>In this place :</div>\r\n      {locationObjects.length > 0 ? (\r\n        <div>{locationObjects}.</div>\r\n      ) : (\r\n        <div>Nothing of interest.</div>\r\n      )}\r\n    </LocationObjectsDiv>\r\n  );\r\n};\r\nLocationObjects.propTypes = {\r\n  items: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LocationObjects;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled  from \"styled-components/macro\";\r\nimport { IItem } from \"../types\"\r\n\r\nconst InventoryDiv= styled.div`\r\n\tmargin-top:10px;\r\n\tmargin-bottom:10px;\r\n`;\r\ntype IProps = {\r\n\titems:Array<IItem>;\r\n\tmoney:number;\r\n}\r\n\r\nconst Inventory: React.SFC<IProps>  = ({ items = [],money=0 }) => {\r\n\tconst inventory = items.map((item:IItem)=>{\r\n\t\treturn item.desc;\r\n\t}).join(\", \")+' and '+money+' coins.';\r\n\t\r\n\treturn (\r\n\t\r\n\t\t<InventoryDiv>\r\n\t\t<div>You are carrying :</div>\r\n\t\t<div>{inventory}</div>\r\n\t\t</InventoryDiv>\r\n\t\r\n\t)\r\n}\r\nInventory.propTypes = {\r\n\titems: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Inventory;\r\n\r\n","import styled from \"styled-components/macro\";\r\nimport { theme } from \"./theme\";\r\n\r\n\r\n\r\nexport const ActionButton = styled.button`\r\ndisplay: inline-block;\r\npadding: 3px 4px 2px 4px;\r\nmargin: 3px 5.9px 3px 0px;\r\nmin-width: 52px;\r\nborder: none;\r\nborder-radius: 2px;\r\nbackground-color: ${props => theme.BUTTON_ENABLED};\r\nfont-weight: bold;\r\nfont-size: inherit;\r\nletter-spacing: inherit;\r\ncolor: ${props => theme.BUTTON_TEXT_COLOR};\r\ncursor: pointer;\r\n&:disabled {\r\n  background-color: ${props => theme.BUTTON_DISABLED};\r\n  color: ${props => theme.BUTTON_DISABLED_TEXT_COLOR};\r\n}\r\n`;\r\n","\r\nimport { IItem, IRoomData, IAction } from \"../types\"\r\n\r\nexport const getRoomData = (roomId: string | number, rooms: Array<IRoomData>): IRoomData => {\r\n\tconst roomData = rooms.filter(room => room.id === roomId)[0];\r\n\treturn roomData;\r\n}\r\n\r\nexport const getInventory = (items: Array<IItem>): Array<IItem> => {\r\n\tconst inventory = items.filter((item: IItem) => item.loc === 'INV').map((item: IItem) => item);\r\n\treturn inventory;\r\n}\r\nexport const getLocationObjects = (roomId: number | string, items: Array<IItem>): Array<IItem> => {\r\n\t//return the whole object as may want to filter on visibility later\r\n\tconst locObjects = items.filter((item: IItem) => item.loc === roomId).map((item: IItem) => item);\r\n\treturn locObjects;\r\n}\r\n\r\nexport const getAllowedExits = (roomData: IRoomData): Array<string> => {\r\n\tconst allowedExits: Array<string> = [];\r\n\tObject.keys(roomData.exits).forEach(function (key) {\r\n\t\tvar val = roomData.exits[key];\r\n\t\tif (val !== '0') {\r\n\t\t\tallowedExits.push(key);\r\n\t\t}\r\n\t});\r\n\treturn (allowedExits);\r\n}\r\nexport const getAllowedActions = (items: Array<IItem>, actions: Array<IAction>, roomID: string | number, money: number) => {\r\n\r\n\t//console.log(actions)\r\n\tlet allowableActions = [];\r\n\tlet actionsToCheck = actions;\r\n\t// ONLY return actions that meet the conditions\r\n\tfor (let i = 0; i < actions.length; i++) {\r\n\t\t//console.log(actions)\r\n\t\tlet condition = actions[i].conditions;\r\n\r\n\t\tlet allowed = true;\r\n\t\t// Are Carrying Condition\r\n\t\tif (condition.hasOwnProperty('areCarrying')) {\r\n\t\t\tlet isCarrying = 0;\r\n\t\t\tfor (let j = 0; j < items.length; j++) {\r\n\t\t\t\tfor (let k = 0; k < condition.areCarrying.length; k++) {\r\n\t\t\t\t\tif (condition.areCarrying[k] === items[j].obj) {\r\n\t\t\t\t\t\tif (items[j].loc === 'INV') {\r\n\t\t\t\t\t\t\tisCarrying++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (isCarrying !== condition.areCarrying.length) {\r\n\t\t\t\tallowed = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Room Contains Condition\r\n\t\tif (condition.hasOwnProperty('roomContains')) {\r\n\t\t\tlet roomContains = 0;\r\n\t\t\tfor (let j = 0; j < items.length; j++) {\r\n\t\t\t\tfor (let k = 0; k < condition.roomContains.length; k++) {\r\n\t\t\t\t\tif (condition.roomContains[k] === items[j].obj) {\r\n\t\t\t\t\t\tif (items[j].loc === roomID) {\r\n\t\t\t\t\t\t\troomContains++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (roomContains !== condition.roomContains.length) {\r\n\t\t\t\tallowed = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Is specific location condition\r\n\t\tif (condition.hasOwnProperty('location')) {\r\n\t\t\tlet isValidLocation = false;\r\n\t\t\tif (condition.location === roomID) {\r\n\t\t\t\tisValidLocation = true;\r\n\t\t\t}\r\n\t\t\tif (isValidLocation === false) {\r\n\t\t\t\tallowed = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Do you need money?\r\n\t\tif (condition.hasOwnProperty('haveMoney')) {\r\n\t\t\tlet hasMoney = false;\r\n\t\t\tif (money >= condition.haveMoney) {\r\n\t\t\t\thasMoney = true;\r\n\t\t\t}\r\n\t\t\tif (hasMoney === false) {\r\n\t\t\t\tallowed = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (allowed === true) {\r\n\t\t\tallowableActions.push(actionsToCheck[i]);\r\n\t\t}\r\n\t}\r\n\t//console.log(allowableActions)\r\n\treturn allowableActions.map((action: IAction) => {\r\n\t\treturn action;\r\n\t});\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { ActionButton } from \"../styled-constants\";\r\nimport {\r\n  //getRoomData,\r\n  getAllowedActions,\r\n} from \"../utils/dataHelper\";\r\nimport {\r\n  resultSuccessRoll,\r\n  resultMessage,\r\n  resultScore,\r\n  resultTake,\r\n  resultDrop,\r\n  resultLocation,\r\n  resultDestroy,\r\n  resultMoney,\r\n  resultRoomDesc,\r\n  resultCreateExit,\r\n  restart\r\n} from \"../actions\";\r\n\r\nimport { IState, IItem, IAction } from \"../types\"\r\n\r\nconst Actions: React.SFC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const objects: Array<IItem> = useSelector((state: IState) => state.gameData.objects);\r\n  const actions: Array<IAction> = useSelector((state: IState) => state.gameData.actions);\r\n  const room: number | string = useSelector((state: IState) => state.gameData.room);\r\n  const money: number = useSelector((state: IState) => state.gameData.money);\r\n\r\n\r\n  const handleAction = (gameActionName: string) => (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    //console.log(gameActionName)\r\n    e.preventDefault();\r\n    const allowableActions: Array<IAction> = getAllowedActions(\r\n      objects,\r\n      actions,\r\n      room,\r\n      money\r\n    )\r\n   \r\n    const results = allowableActions.filter((a:IAction) => {\r\n      return a.action === gameActionName;\r\n    });\r\n    if(results.length!==1){\r\n      console.log(\"More than one action was matched: you should combine results instead\")\r\n    }\r\n \r\n\r\n    for (let key of Object.keys(results[0].results)) {\r\n      //console.log(\"Dispatch 1 or more Results from handle Action\")\r\n      dispatchResults(key, results[0].results[key]);\r\n    }\r\n  };\r\n\r\n\r\n  const dispatchResults = (gameActionName: string, data: any) => {\r\n\r\n    //console.log(\"action data is different for each action response - so any is fine for now\");\r\n\r\n    switch (gameActionName) {\r\n      case \"createExitOnRollSuccess\":\r\n        const roll:number = Math.ceil(Math.random() * data.sides);\r\n\r\n        //console.log(roll, data.sides);\r\n        if (roll === data.sides) {\r\n          dispatch(resultSuccessRoll(roll === data.sides));\r\n\r\n          dispatch(resultCreateExit({ dir: data.dir, toRoom: data.toRoom }));\r\n\r\n          //rollmMssage\r\n          dispatch(\r\n            resultMessage(\r\n              \"You rolled a \" +\r\n              roll +\r\n              \" from a \" +\r\n              data.sides +\r\n              \" sided dice. \" +\r\n              data.rollMessage\r\n            )\r\n          );\r\n        } else {\r\n          dispatch(\r\n            resultMessage(\r\n              \"You rolled a \" + roll + \" from a \" + data.sides + \" sided dice. \"\r\n            )\r\n          );\r\n        }\r\n\r\n        break;\r\n\r\n      case \"message\":\r\n        dispatch(resultMessage(data));\r\n        break;\r\n      case \"take\":\r\n        dispatch(resultTake(data));\r\n        break;\r\n      case \"drop\":\r\n        dispatch(resultDrop(data));\r\n        break;\r\n      case \"changeScore\":\r\n        dispatch(resultScore(data));\r\n        break;\r\n      case \"changeLocation\":\r\n        dispatch(resultLocation(data));\r\n        break;\r\n      case \"destroys\":\r\n        dispatch(resultDestroy(data));\r\n        break;\r\n      case \"addMoney\":\r\n        dispatch(resultMoney(data));\r\n        break;\r\n      case \"removeMoney\":\r\n        dispatch(resultMoney(-data));\r\n        break;\r\n      case \"changeRoomDesc\":\r\n        dispatch(resultRoomDesc(data));\r\n        break;\r\n      case \"createExit\":\r\n        dispatch(resultCreateExit(data));\r\n        break;\r\n      case \"restart\":\r\n        dispatch(restart());\r\n\r\n        break;\r\n      default:\r\n        console.warn(\"WARNING result = [\" + gameActionName + \"] is not being processed!\");\r\n    }\r\n  }\r\n\r\n  const allowableActions: Array<IAction> = getAllowedActions(\r\n    objects,\r\n    actions,\r\n    room,\r\n    money\r\n  )\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      {allowableActions.length > 0 &&\r\n        allowableActions.map((action, index) => {\r\n          return (\r\n            <ActionButton key={index} onClick={handleAction(action.action)}>\r\n              {action.action}\r\n            </ActionButton >\r\n          );\r\n        })}\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default Actions;\r\n\r\n\r\n","import React, { } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { ActionButton } from \"../styled-constants\";\r\nimport { getRoomData, getAllowedExits } from \"../utils/dataHelper\";\r\nimport { resultMessage, resultLocation } from \"../actions\";\r\nimport { IState, IRoomData } from \"../types\"\r\n\r\nconst ActionsDiv = styled.div`\r\n  display: inline-block;\r\n  vertical-align: top;\r\n`;\r\ninterface IProps {\r\n\r\n}\r\n\r\nconst ExploreActions: React.SFC<IProps> = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const roomID: number | string = useSelector((state: IState) => state.gameData.room);\r\n  const rooms: Array<IRoomData> = useSelector((state: IState) => state.gameData.rooms);\r\n\r\n  const handleMove = (exit: string) => (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    //const { rooms, room } = this.props;\r\n\r\n    const currentRoomExits:any = getRoomData(roomID, rooms).exits;\r\n    //console.log(currentRoomExits)\r\n    e.preventDefault();\r\n    switch (exit) {\r\n      case \"Up\":\r\n        dispatch(resultLocation(currentRoomExits.u));\r\n        dispatch(resultMessage(\"You've travelled Up\"));\r\n        break;\r\n      case \"Down\":\r\n        dispatch(resultLocation(currentRoomExits.d));\r\n        dispatch(resultMessage(\"You've travelled Down\"));\r\n        break;\r\n      case \"North\":\r\n        dispatch(resultLocation(currentRoomExits.n));\r\n        dispatch(resultMessage(\"You've travelled North\"));\r\n        break;\r\n      case \"South\":\r\n        dispatch(resultLocation(currentRoomExits.s));\r\n        dispatch(resultMessage(\"You've travelled South\"));\r\n        break;\r\n      case \"West\":\r\n        dispatch(resultLocation(currentRoomExits.w));\r\n        dispatch(resultMessage(\"You've travelled West\"));\r\n        break;\r\n      case \"East\":\r\n        dispatch(resultLocation(currentRoomExits.e));\r\n        dispatch(resultMessage(\"You've travelled East\"));\r\n        break;\r\n      default:\r\n        console.warn(\"WARNING - EXIT = [\" + exit + \"] is not being processed!\");\r\n    }\r\n  };\r\n\r\n \r\n\r\n  const renderExits = (currentRoomData: any) => {\r\n\r\n    const unsortedExits = getAllowedExits(currentRoomData).map((exit:string) => {\r\n      if (exit === \"n\") return \"North\";\r\n      if (exit === \"e\") return \"East\";\r\n      if (exit === \"s\") return \"South\";\r\n      if (exit === \"w\") return \"West\";\r\n\r\n      if (exit === \"u\") return \"Up\";\r\n      if (exit === \"d\") return \"Down\";\r\n      return \"NONE\";\r\n    });\r\n    //However the data arrive always show n,s,w,e,u,d\r\n    const potentialExits = [\"North\", \"East\", \"South\", \"West\", \"Up\", \"Down\"];\r\n    const allowableExits = unsortedExits.filter((exit: string) => {\r\n      return potentialExits.includes(exit);\r\n    });\r\n\r\n    return (\r\n      <ActionsDiv>\r\n        <div\r\n          style={{\r\n            width: \"140px\",\r\n            display: \"inline-block\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <div>\r\n            {allowableExits.includes(\"North\")\r\n              ? renderOpenExit(\"North\")\r\n              : renderClosedExit(\"North\")}\r\n          </div>\r\n          <div style={{ display: \"inline-block\", width: \"40%\" }}>\r\n            {allowableExits.includes(\"West\")\r\n              ? renderOpenExit(\"West\")\r\n              : renderClosedExit(\"West\")}\r\n          </div>\r\n          <div style={{ display: \"inline-block\", width: \"40%\" }}>\r\n            {allowableExits.includes(\"East\")\r\n              ? renderOpenExit(\"East\")\r\n              : renderClosedExit(\"East\")}\r\n          </div>\r\n          <div>\r\n            {allowableExits.includes(\"South\")\r\n              ? renderOpenExit(\"South\")\r\n              : renderClosedExit(\"South\")}\r\n          </div>\r\n          <div style={{ display: \"inline-block\", width: \"40%\" }}>\r\n            {allowableExits.includes(\"Up\")\r\n              ? renderOpenExit(\"Up\")\r\n              : renderClosedExit(\"Up\")}\r\n          </div>\r\n          <div style={{ display: \"inline-block\", width: \"40%\" }}>\r\n            {allowableExits.includes(\"Down\")\r\n              ? renderOpenExit(\"Down\")\r\n              : renderClosedExit(\"Down\")}\r\n          </div>\r\n        </div>\r\n      </ActionsDiv>\r\n    );\r\n    //}\r\n  };\r\n  const renderOpenExit = (exit: string) => {\r\n    return (\r\n      <ActionButton key={exit} onClick={handleMove(exit)}>\r\n        {exit}\r\n      </ActionButton>\r\n    );\r\n  };\r\n  const renderClosedExit = (exit: string) => {\r\n    return (\r\n      <ActionButton key={exit} disabled={true}>\r\n        {exit}\r\n      </ActionButton>\r\n    );\r\n  };\r\n\r\n\r\n  const currentRoomData:any = getRoomData(roomID, rooms);\r\n\r\n  return (\r\n    <>{renderExits(currentRoomData)}</>\r\n  )\r\n}\r\n\r\n\r\nexport default ExploreActions;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { debounce } from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { IRoomData} from \"../types\"\r\n\r\nconst canvasPath = \"url('\"+process.env.PUBLIC_URL+\"/assets/theshivers/images/game_bg.jpg')\"\r\nconst WorldMapDiv = styled.div`\r\n    > canvas {\r\n      border-radius: 10px;\r\n      display: inline;\r\n      background-image: ${canvasPath}\r\n    }\r\n  `;\r\n\r\ninterface IProps {\r\n  roomID: number | string;\r\n  rooms: Array<IRoomData>;\r\n  discoveredPaths: Array<string>;\r\n}\r\n\r\nconst WorldMap: React.SFC<IProps> = ({ roomID, rooms, discoveredPaths }) => {\r\n\r\n\r\n  const canvasRef = useRef<any>();\r\n  const mapContainerRef = useRef<any>();\r\n  const [mapWidth, setMapWidth] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const updateCanvasDebounce = debounce(() => {\r\n      if (!mapContainerRef.current) {\r\n        //TODO why is mapContainerRef sometimes missing?\r\n        return;\r\n      }\r\n      setMapWidth(Math.max(Math.min(mapContainerRef.current.offsetWidth, 100), 100));\r\n    }, 40);\r\n\r\n    updateCanvasDebounce()\r\n    window.addEventListener(\"resize\", updateCanvasDebounce);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateCanvasDebounce);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateCanvasCalc = () => {\r\n      if(canvasRef && canvasRef.current && canvasRef.current.getContext && canvasRef.current.getContext(\"2d\")){\r\n        const ctx:CanvasRenderingContext2D = canvasRef.current.getContext(\"2d\");\r\n        if(!ctx){\r\n          return;\r\n        }\r\n      const visitedRooms = rooms.filter((roomData: IRoomData) => {\r\n        if (discoveredPaths.includes(roomData.id)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n\r\n      canvasRef.current.width = mapWidth;\r\n      canvasRef.current.height = mapWidth;\r\n      //Named rooms are expected to be hidden. Only numbered rooms should appear on map\r\n\r\n      const spacing = mapWidth / 5;\r\n      const middle = spacing / 2;\r\n\r\n      //Cutout circle\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.fillRect(0, 0, mapWidth, mapWidth);\r\n      ctx.save();\r\n      ctx.globalCompositeOperation = \"destination-out\";\r\n      ctx.beginPath();\r\n\r\n      //Swap out if i want to revert to a circular map\r\n      //ctx.arc(width / 2, width / 2, width / 2, 0, Math.PI * 2, true);\r\n      ctx.fillRect(0, 0, mapWidth, mapWidth);\r\n      ctx.fill();\r\n      ctx.restore();\r\n      ctx.strokeStyle = \"#333\";\r\n      ctx.setLineDash([1, 5]);\r\n\r\n      //DRAW ROOM LINKS\r\n\r\n      for (let room of visitedRooms) {\r\n        const grid = parseInt(room.id, 10);\r\n        if (grid > 10) {\r\n          const x = Math.floor(grid / 10) * spacing + middle;\r\n          const y = (grid % 10) * spacing + middle;\r\n          const exits: Array<any> = Object.values(room.exits)\r\n          for (let exit of exits) {\r\n            const exitVal = parseInt(exit, 10);\r\n            if (exitVal > 10) {\r\n              const xE = Math.floor(exitVal / 10) * spacing + middle;\r\n              const yE = (exitVal % 10) * spacing + middle;\r\n              ctx.moveTo(x / 2, y / 2);\r\n              ctx.lineTo(xE / 2, yE / 2);\r\n              ctx.stroke();\r\n            }\r\n          };\r\n        }\r\n      };\r\n      //DRAW PLAYER POSTION\r\n      \r\n      if ((roomID) > 10) {\r\n        const roomNumber:number = Number(roomID);\r\n        //Player\r\n        const x = Math.floor(roomNumber / 10) * spacing + middle;\r\n        const y = (roomNumber % 10) * spacing + middle;\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"rgba(0, 0, 0, 0)\";\r\n        ctx.arc(x / 2, y / 2, spacing / 6, 0, 2 * Math.PI);\r\n        ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n      }\r\n      \r\n      \r\n      //DARKEN UNVISITED ROOMS\r\n      for (let x = 0; x < 10; x++) {\r\n        for (let y = 0; y < 10; y++) {\r\n          const visited =\r\n            visitedRooms.filter(room => {\r\n              return parseInt(room.id) === x * 10 + y;\r\n            }).length === 1;\r\n          if (!visited) {\r\n            ctx.save();\r\n            ctx.shadowBlur = 30;\r\n            ctx.shadowColor = \"black\";\r\n            ctx.fillStyle = \"rgba(0, 0, 0,0.1)\";\r\n            ctx.fillRect(\r\n              ((x - 1) * spacing) / 2 - spacing / 4 + spacing / 2 + middle / 2,\r\n              (y * spacing) / 2 - spacing / 4 + middle / 2,\r\n              spacing / 2,\r\n              spacing / 2\r\n            );\r\n            ctx.restore();\r\n          }\r\n        }\r\n      }\r\n    };\r\n      }\r\n      \r\n    updateCanvasCalc();\r\n  }, [mapWidth, roomID, canvasRef, discoveredPaths, rooms]);\r\n\r\n  return (\r\n    <>\r\n    {mapContainerRef && canvasRef &&\r\n      <WorldMapDiv ref={mapContainerRef}>\r\n      <canvas ref={canvasRef} />\r\n    </WorldMapDiv>\r\n    }\r\n    </>\r\n   \r\n  );\r\n}\r\n\r\nexport default WorldMap;\r\n","import React, { } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport RoomDescription from \"../components/RoomDescription\";\r\nimport RoomImage from \"../components/RoomImage\";\r\nimport Message from \"../components/Message\";\r\nimport LocationObjects from \"../components/LocationObjects\";\r\nimport Inventory from \"../components/Inventory\";\r\nimport Actions from \"../components/GameActions\";\r\nimport ExploreActions from \"../components/ExploreActions\";\r\nimport WorldMap from \"../components/WorldMap\";\r\n//import Debug from '../components/Debug';\r\nimport { IState, IRoomData, IItem } from \"../types\";\r\nimport { getRoomData, getInventory, getLocationObjects } from \"../utils/dataHelper\";\r\n\r\n/*\r\nThe project was built assuming it is hosted at the server root.\r\nYou can control this with the homepage field in your package.json.\r\nFor example, add this to build it for GitHub Pages:\r\n\r\n  \"homepage\" : \"http://myname.github.io/myapp\",\r\n*/\r\n//npm run build\r\n//yarn global add serve\r\n//yarn - s serve\r\n//http://localhost:5000\r\n\r\nconst HomeDiv = styled.div`\r\n  max-width: 600px;\r\n\r\n  margin: 70px auto 0px auto;\r\n  @media only screen and (min-width: 600px) {\r\n    /* wider */\r\n  }\r\n`;\r\nconst TextPanelDiv = styled.div`\r\n`;\r\nconst MapContainerDiv = styled.div`\r\n  display: inline-block;\r\n  width: calc(100% - 150px);\r\n  /*width:120px;*/\r\n  vertical-align:top;\r\n\r\n  @media only screen and (min-width: 600px) {\r\n    /* wider */\r\n    >div {\r\n  \r\n    }\r\n  }\r\n`;\r\nconst ImageContainerDiv = styled.div`\r\n display: inline-block;\r\n  /*width:72%;*/\r\n  width:100%;\r\n`\r\n\r\n\r\nconst Game: React.FC = () => {\r\n\r\n  const objects: Array<IItem> = useSelector((state: IState) => state.gameData.objects);\r\n  const roomID: number | string = useSelector((state: IState) => state.gameData.room);\r\n  const money: number = useSelector((state: IState) => state.gameData.money);\r\n  const rooms: Array<IRoomData> = useSelector((state: IState) => state.gameData.rooms);\r\n  const discoveredPaths: any = useSelector((state: IState) => state.gameData.discoveredPaths);\r\n  const lastMessage: string = useSelector((state: IState) => state.gameData.lastMessage);\r\n\r\n  const getDescription = (roomData: IRoomData): string => {\r\n    if (roomData && roomData.desc && roomData.desc.length) {\r\n      return roomData.desc[0];\r\n    } else {\r\n      console.log(\"NO roomData desc for \" + roomData);\r\n      return \"\";\r\n    }\r\n  }\r\n  const getImage = (roomData: IRoomData): string => {\r\n    if (roomData && roomData.image) {\r\n      return roomData.image;\r\n    } else {\r\n      console.log(\"NO roomData image for \" + roomData);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  //Dont Allow rendering if data is empty\r\n  if (rooms.length === 0) {\r\n    return <p>NOT LOADED</p>;\r\n  }\r\n  const currentRoomData = getRoomData(roomID, rooms);\r\n  const description = getDescription(currentRoomData);\r\n  const locationObjects = getLocationObjects(roomID, objects);\r\n  const image = getImage(currentRoomData);\r\n  const inventory = getInventory(objects);\r\n\r\n  // assets folder may be switchable later\r\n  const assetsFolder = \"theshivers\";\r\n\r\n  return (\r\n    <HomeDiv>\r\n      <ImageContainerDiv>\r\n        <RoomImage\r\n          path={process.env.PUBLIC_URL + \"/assets/\" + assetsFolder + \"/images/\"}\r\n          image={image}\r\n        />\r\n      </ImageContainerDiv>\r\n      <div style={{ display: 'inline-block', width: \"150px\" }}>\r\n        <ExploreActions />\r\n      </div>\r\n      <MapContainerDiv>\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <WorldMap\r\n            discoveredPaths={discoveredPaths}\r\n            roomID={roomID}\r\n            rooms={rooms}\r\n          />\r\n        </div>\r\n      </MapContainerDiv>\r\n      <Actions />\r\n      <TextPanelDiv>\r\n        <Message message={lastMessage} />\r\n        <RoomDescription description={description} />\r\n        <LocationObjects items={locationObjects} />\r\n        <Inventory items={inventory} money={money} />\r\n      </TextPanelDiv>\r\n      {/*<Debug debug={JSON.stringify(objects)} />*/}\r\n    </HomeDiv>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React, { useEffect } from \"react\";\r\nimport {  useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { ActionButton } from \"../styled-constants\";\r\nimport { restart } from \"../actions\";\r\n\r\nconst PageDiv = styled.div`\r\n  max-width: 600px;\r\n  margin: 70px auto 0px auto;\r\n  padding: 10px;\r\n  > p {\r\n    line-height: 20px;\r\n    margin-block-start: 1px;\r\n    margin-block-end: 3px;\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  dispatch: Function;\r\n}\r\ninterface IState {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst About: React.FC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [width, setWidth] = React.useState(0);\r\n  const [height, setHeight] = React.useState(0);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n\r\n      setWidth(window.innerWidth);\r\n      setHeight(window.innerHeight);\r\n    };\r\n    updateWindowDimensions();\r\n\r\n    window.addEventListener(\"resize\", updateWindowDimensions);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateWindowDimensions);\r\n    }\r\n  }, [])\r\n\r\n\r\n  const handleRestart = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    dispatch(restart())\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <PageDiv>\r\n      <div style={{ background: \"#333\", padding:\"10px\" , borderRadius:\"4px\"}}>\r\n        <h2>Game Engine For Interactive Fiction</h2>\r\n        <p>By Mark Horsell</p>\r\n        </div>\r\n        <br />\r\n        <div style={{ background: \"#333\", padding:\"10px\" , borderRadius:\"4px\"}}>\r\n        <h3>Version 2.1.1 : 27 September 2019</h3>\r\n        <p>Redux connect replaced with useDispatch and useSelector Hooks.</p>\r\n        <br />\r\n        <h3>Version 2.1.0 : 25 September 2019</h3>\r\n        <p>Now uses 100% Functional Components with Hooks - All Classes and Lifecycle methods removed.</p>\r\n        <br />\r\n        <h3>Version 2.0.0 : 24 March 2019</h3>\r\n        <p>Converted from JavaScript to TypeScript and from Inline-CSS to Styled-components.</p>\r\n        <br />\r\n        <h3>Version 1.0.3 : May 2018</h3>\r\n        <p>Class Based, Inline-CSS, React Router, Redux.</p>\r\n        </div>\r\n        <br />\r\n        <div style={{ background: \"#333\",padding:\"10px\" , borderRadius:\"4px\" }}>\r\n          <h3>Debug Info</h3>\r\n          <p>URL : {window.location.href}</p>\r\n          <p>PUBLIC_URL : {process.env.PUBLIC_URL}</p>\r\n          <p>\r\n            W : {width} | H : {height}\r\n          </p>\r\n          <p>React Version : {React.version} </p>\r\n        </div>\r\n        <br />\r\n        {/*\r\n      <p>An editor is available here ------</p>\r\n      <p>Strict mode wraps Home and About - Wrapping App will create warnings as either Provider or Router Libraries are not Strict as yet</p>\r\n  */}\r\n\r\n<div style={{ background: \"#333\",padding:\"10px\" , borderRadius:\"4px\" }}>\r\n        <p>\r\n          WARNING : RESETTING GAME WILL CLEAR ALL DATA AND IS NOT UNDOABLE\r\n          </p>\r\n        <ActionButton onClick={handleRestart}>Reset game</ActionButton>\r\n        </div>\r\n      </PageDiv>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default About;\r\n","import React, { } from \"react\";\r\n\r\nimport styled  from \"styled-components/macro\";\r\n\r\nconst PageDiv = styled.div`\r\n  max-width: 600px;\r\n\r\n  margin: 70px auto 0px auto;\r\n padding:10px;\r\n`;\r\n\r\nconst DoneP=styled.p`\r\n  text-decoration: line-through;\r\n`;\r\n\r\n\r\nconst Todo: React.FC = () => {\r\n  \r\n  \r\n    return (\r\n      <PageDiv>\r\n      <p>The carver now makes a dice from the bone</p>\r\n       <p>Once rolled a 6 the monster shows you an exit so you can find the mouthpiece</p>\r\n        <DoneP>Add styled-components</DoneP>\r\n        <p>Remove css and convert to styled-c</p>\r\n        <p>Fix the styling - make iphone 5 compatible</p>\r\n        <DoneP>Add Typescripy</DoneP>\r\n        <p>Fully convert to typescript</p>\r\n        <DoneP>Fix map connection rendering</DoneP>\r\n        <DoneP>Update to lastest packages</DoneP>\r\n        <p>Add Dice roll option to fight monster</p>\r\n        <p>Add typein option for puzzles or riddle answers</p>\r\n        <p>Add Health Meter</p>\r\n        <p>\r\n          could eating posioned mushrooms cause confusion so that directions\r\n          appear as Worth, Sest, Eouth, Nest and go in random directions\r\n        </p>\r\n        <p>bump up to version 2.0</p>\r\n      </PageDiv>\r\n    );\r\n  }\r\n\r\n\r\nexport default Todo;\r\n","import React, { useEffect } from \"react\";\r\n\r\n\r\nimport {\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Game from \"./pages/Game\";\r\nimport About from \"./pages/About\";\r\nimport Todo from \"./pages/Todo\";\r\n\r\nimport {\r\n  restart\r\n} from \"./actions\";\r\n\r\nimport { IState } from \"./types\"\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n\r\nconst AppContent: React.SFC<IProps> = () => {\r\n    const dispatch = useDispatch()\r\n    const gameTitle = useSelector((state: IState) => state.gameData.gameTitle);\r\n    useEffect(() => {\r\n      if (gameTitle) {\r\n        //Alreay has gameTitle so must have come from persist\r\n        //console.log(\"game data from cache\");\r\n      } else {\r\n        dispatch(restart());\r\n      }\r\n    });\r\n    return (\r\n      <main>\r\n        {gameTitle &&\r\n          <>\r\n            <Header title={gameTitle} />\r\n            <Switch>\r\n            <Route path={`/`} component={Game} />\r\n              <Route path={`/game`} component={Game} />\r\n              <Route path={`/about`} component={About} />\r\n              <Route path={`/todo`} component={Todo} />\r\n              {/*<Redirect from={`/`} to={`/game`} />*/}\r\n           \r\n          \r\n            </Switch>\r\n          </>\r\n        }\r\n        {!gameTitle &&\r\n          <div>Not Loaded...</div>\r\n        }\r\n      </main>\r\n    )\r\n  }\r\n\r\n\r\nexport default AppContent;\r\n"],"sourceRoot":""}