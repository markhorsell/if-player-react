{"version":3,"sources":["components/Nav.tsx","components/Header.tsx","components/RoomDescription.tsx","components/RoomImage.tsx","components/Message.tsx","components/LocationObjects.tsx","components/Inventory.tsx","styled-constants.tsx","utils/dataHelper.tsx","components/GameActions.tsx","components/ExploreActions.tsx","components/WorldMap.tsx","pages/Game.tsx","pages/About.tsx","AppContent.tsx"],"names":["NavDiv","styled","div","props","theme","HIGHLIGHT_COLOR","Nav","to","process","activeStyle","color","HeaderDiv","BACKGROUND_COLOR","TitleDiv","Header","title","DescDiv","RoomDescription","description","ImageDiv","RoomImage","imagePath","path","image","style","backgroundImage","MessageDiv","Message","message","LocationObjectsDiv","LocationObjects","items","locationObjects","filter","item","show","map","desc","join","length","InventoryDiv","Inventory","money","inventory","ActionButton","button","BUTTON_ENABLED","BUTTON_TEXT_COLOR","BUTTON_DISABLED","BUTTON_DISABLED_TEXT_COLOR","getRoomData","roomId","rooms","room","id","getAllowedActions","actions","roomID","allowableActions","actionsToCheck","i","condition","conditions","allowed","hasOwnProperty","isCarrying","j","k","areCarrying","obj","loc","roomContains","isValidLocation","location","hasMoney","haveMoney","push","action","GameActionButton","Actions","dispatch","useDispatch","objects","useSelector","state","gameData","dispatchResults","gameActionName","data","roll","Math","ceil","random","sides","resultSuccessRoll","resultCreateExit","dir","toRoom","resultMessage","rollMessage","resultTake","resultDrop","resultScore","resultLocation","resultDestroy","resultMoney","resultRoomDesc","restart","console","warn","index","key","onClick","e","preventDefault","results","a","log","Object","keys","ActionsDiv","MoveButton","ExploreActions","handleMove","selectedExit","currentRoomExits","exits","u","d","n","s","w","roomData","allowedExits","forEach","getAllowedExits","width","display","textAlign","disabled","includes","WorldMapDiv","WorldMap","discoveredPaths","canvasRef","useRef","mapContainerRef","useState","mapWidth","setMapWidth","useEffect","updateCanvasDebounce","debounce","current","max","min","offsetWidth","window","addEventListener","removeEventListener","getContext","ctx","visitedRooms","height","spacing","middle","fillStyle","fillRect","save","globalCompositeOperation","beginPath","fill","restore","strokeStyle","setLineDash","grid","parseInt","x","floor","y","values","exit","exitVal","xE","yE","moveTo","lineTo","stroke","roomNumber","Number","arc","PI","shadowBlur","shadowColor","updateCanvasCalc","ref","HomeDiv","TextPanelDiv","MapContainerDiv","ImageContainerDiv","Game","lastMessage","currentRoomData","getImage","getInventory","GameActions","PageDiv","About","slug","useParams","useLocation","history","useHistory","React","setWidth","setHeight","move","updateWindowDimensions","innerWidth","innerHeight","StrictMode","background","padding","borderRadius","href","version","JSON","stringify","AppContent","gameTitle","component","from"],"mappings":"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","file":"static/js/4.4bdadac9.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components/macro\";\r\nimport { theme } from \"../theme\";\r\nimport React, { FunctionComponent } from \"react\";\r\n\r\nconst NavDiv = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  right:12px;\r\n  > ul {\r\n    margin:8px 0px 0px 0px;\r\n    text-align: left;\r\n    width: 60px;\r\n    > li {\r\n      display: inline-block;\r\n\r\n      margin:0px 0px 4px 10px;\r\n      > a {\r\n        color: darkgray;\r\n        font-size: 14px;\r\n        text-decoration: none;\r\n\r\n        &:hover {\r\n          color: ${props => theme.HIGHLIGHT_COLOR};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Nav: FunctionComponent = () => {\r\n  return (\r\n    <NavDiv>\r\n      <ul>\r\n        <li>\r\n          <NavLink to={`${process.env.PUBLIC_URL}/game`} activeStyle={{ color: theme.HIGHLIGHT_COLOR }}>\r\n            Game\r\n        </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to={`${process.env.PUBLIC_URL}/about`} activeStyle={{ color: theme.HIGHLIGHT_COLOR }}>\r\n            About\r\n        </NavLink>\r\n        </li>\r\n\r\n      </ul>\r\n    </NavDiv>)\r\n}\r\n\r\n\r\nexport default Nav;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled  from \"styled-components/macro\"\r\nimport Nav from \"./Nav\";\r\nimport { theme } from \"../theme\";\r\n\r\nconst HeaderDiv = styled.div`\r\n\r\n  position: fixed;\r\n  top:0px;\r\n  z-index: 1;\r\n  background-color:  ${props => theme.BACKGROUND_COLOR};\r\n  display: inline-block;\r\n  width:100%;\r\n  \r\n \r\n  > div {\r\n    position:relative;\r\n    max-width: 600px;\r\n    margin:0 auto;\r\n    \r\n    height:60px;\r\n  }\r\n \r\n \r\n`;\r\nconst TitleDiv = styled.div`\r\nposition:absolute;\r\ntop:30px;\r\nleft:10px;\r\nfont-family: \"Yesteryear\", cursive;\r\n  color:${props => theme.HIGHLIGHT_COLOR};\r\n  text-align: left;\r\n  font-size: 50px;\r\n  /*line-height: 90px;*/\r\n`;\r\n\r\ninterface IProps {\r\n  title: string;\r\n}\r\n\r\nconst Header: FunctionComponent <IProps> = props => {\r\n  return <HeaderDiv>\r\n    <div>\r\n    <TitleDiv>{props.title}</TitleDiv>\r\n    <Nav/>\r\n    </div>\r\n    </HeaderDiv>;\r\n};\r\n\r\nexport default Header;\r\n","import React, {FunctionComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styled  from \"styled-components/macro\"\r\n\r\nconst DescDiv = styled.div`\r\n\r\n\tmargin-top:4px;\r\n\tline-height:20px;\r\n`;\r\n\r\ntype IProps = {\r\n\tdescription:string\r\n}\r\n\r\nconst RoomDescription: FunctionComponent <IProps>  = ({ description }) => (\r\n\t<DescDiv>{description}</DescDiv>\r\n\t)\r\n\r\nRoomDescription.propTypes = {\r\n\tdescription: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default RoomDescription;\r\n\r\n","import React , {FunctionComponent }from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ImageDiv = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  padding-bottom: 36.3%;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  margin:0px 0px 10px 0px;\r\n`;\r\ninterface IProps {\r\n  path: string;\r\n  image: string;\r\n}\r\n\r\nconst RoomImage: FunctionComponent <IProps> = ({ path, image }) => {\r\n  const imagePath: string = \"url(\" + path + image + \")\";\r\n  return (\r\n    <ImageDiv style={{ backgroundImage: imagePath }} />\r\n  )\r\n\r\n}\r\n\r\n\r\nRoomImage.propTypes = {\r\n  path: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired\r\n};\r\n\r\nexport default RoomImage;\r\n","import React, {FunctionComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components/macro\"\r\n\r\nconst MessageDiv = styled.div`\r\n    margin-top:10px;\r\n`;\r\n\r\ntype IProps = {\r\n    message: string\r\n}\r\n\r\nconst Message: FunctionComponent <IProps> = ({ message }) => (\r\n    <MessageDiv>{message}</MessageDiv>\r\n)\r\n\r\nMessage.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Message;\r\n\r\n","import React, { FunctionComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { IItem } from \"../types\"\r\nimport styled from \"styled-components/macro\"\r\n\r\nconst LocationObjectsDiv = styled.div`\r\n  margin-top:10px;\r\n\tmargin-bottom:10px;\r\n`;\r\ntype IProps = {\r\n  items: Array<IItem>;\r\n}\r\n\r\nconst LocationObjects: FunctionComponent<IProps> = ({ items = [] }) => {\r\n  const locationObjects = items\r\n    .filter((item: IItem) => {\r\n      return item.show !== false;\r\n    })\r\n    .map((item: IItem) => {\r\n      return item.desc;\r\n    })\r\n    .join(\", \");\r\n  return (\r\n    <LocationObjectsDiv>\r\n      <div>In this place :</div>\r\n      {locationObjects.length > 0 ? (\r\n        <div>{locationObjects}.</div>\r\n      ) : (\r\n          <div>Nothing of interest.</div>\r\n        )}\r\n    </LocationObjectsDiv>\r\n  );\r\n};\r\nLocationObjects.propTypes = {\r\n  items: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LocationObjects;\r\n","import React, {FunctionComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled  from \"styled-components/macro\";\r\nimport { IItem } from \"../types\"\r\n\r\nconst InventoryDiv= styled.div`\r\n\tmargin-top:10px;\r\n\tmargin-bottom:10px;\r\n`;\r\ntype IProps = {\r\n\titems:Array<IItem>;\r\n\tmoney:number;\r\n}\r\n\r\nconst Inventory: FunctionComponent<IProps>  = ({ items = [],money=0 }) => {\r\n\tconst inventory = items.map((item:IItem)=>{\r\n\t\treturn item.desc;\r\n\t}).join(\", \")+' and '+money+' coins.';\r\n\t\r\n\treturn (\r\n\t\r\n\t\t<InventoryDiv>\r\n\t\t<div>You are carrying :</div>\r\n\t\t<div>{inventory}</div>\r\n\t\t</InventoryDiv>\r\n\t\r\n\t)\r\n}\r\nInventory.propTypes = {\r\n\titems: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Inventory;\r\n\r\n","import styled from \"styled-components/macro\";\r\nimport { theme } from \"./theme\";\r\n\r\n\r\n\r\nexport const ActionButton = styled.button`\r\ndisplay: inline-block;\r\npadding: 3px 4px 2px 4px;\r\n/*margin: 3px 5.9px 3px 0px;*/\r\nmin-width: 52px;\r\nborder: none;\r\nborder-radius: 2px;\r\nbackground-color: ${props => theme.BUTTON_ENABLED};\r\nfont-weight: bold;\r\nfont-size: inherit;\r\nletter-spacing: inherit;\r\ncolor: ${props => theme.BUTTON_TEXT_COLOR};\r\ncursor: pointer;\r\n&:disabled {\r\n  background-color: ${props => theme.BUTTON_DISABLED};\r\n  color: ${props => theme.BUTTON_DISABLED_TEXT_COLOR};\r\n}\r\n&:active {\r\n  color: ${props => theme.BUTTON_ENABLED};\r\n  background-color: ${props => theme.BUTTON_TEXT_COLOR};\r\n\r\n}\r\n`;\r\n","\r\nimport { IItem, IRoomData, IAction } from \"../types\"\r\n\r\nexport const getRoomData = (roomId: string | number, rooms: Array<IRoomData>): IRoomData => {\r\n\tconst roomData = rooms.filter(room => room.id === roomId)[0];\r\n\treturn roomData;\r\n}\r\n\r\nexport const getInventory = (items: Array<IItem>): Array<IItem> => {\r\n\tconst inventory = items.filter((item: IItem) => item.loc === 'INV').map((item: IItem) => item);\r\n\treturn inventory;\r\n}\r\nexport const getLocationObjects = (roomId: number | string, items: Array<IItem>): Array<IItem> => {\r\n\t//return the whole object as may want to filter on visibility later\r\n\tconst locObjects = items.filter((item: IItem) => item.loc === roomId).map((item: IItem) => item);\r\n\treturn locObjects;\r\n}\r\n\r\nexport const getAllowedExits = (roomData: IRoomData): Array<string> => {\r\n\tconst allowedExits: Array<string> = [];\r\n\tObject.keys(roomData.exits).forEach(function (key) {\r\n\t\tvar val = roomData.exits[key];\r\n\t\tif (val !== '0') {\r\n\t\t\tallowedExits.push(key);\r\n\t\t}\r\n\t});\r\n\treturn (allowedExits);\r\n}\r\nexport const getAllowedActions = (items: Array<IItem>, actions: Array<IAction>, roomID: string | number, money: number) => {\r\n\r\n\t//console.log(actions)\r\n\tlet allowableActions = [];\r\n\tlet actionsToCheck = actions;\r\n\t// ONLY return actions that meet the conditions\r\n\tfor (let i = 0; i < actions.length; i++) {\r\n\t\t//console.log(actions)\r\n\t\tlet condition = actions[i].conditions;\r\n\r\n\t\tlet allowed = true;\r\n\t\t// Are Carrying Condition\r\n\t\tif (condition.hasOwnProperty('areCarrying')) {\r\n\t\t\tlet isCarrying = 0;\r\n\t\t\tfor (let j = 0; j < items.length; j++) {\r\n\t\t\t\tfor (let k = 0; k < condition.areCarrying.length; k++) {\r\n\t\t\t\t\tif (condition.areCarrying[k] === items[j].obj) {\r\n\t\t\t\t\t\tif (items[j].loc === 'INV') {\r\n\t\t\t\t\t\t\tisCarrying++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (isCarrying !== condition.areCarrying.length) {\r\n\t\t\t\tallowed = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Room Contains Condition\r\n\t\tif (condition.hasOwnProperty('roomContains')) {\r\n\t\t\tlet roomContains = 0;\r\n\t\t\tfor (let j = 0; j < items.length; j++) {\r\n\t\t\t\tfor (let k = 0; k < condition.roomContains.length; k++) {\r\n\t\t\t\t\tif (condition.roomContains[k] === items[j].obj) {\r\n\t\t\t\t\t\tif (items[j].loc === roomID) {\r\n\t\t\t\t\t\t\troomContains++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (roomContains !== condition.roomContains.length) {\r\n\t\t\t\tallowed = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Is specific location condition\r\n\t\tif (condition.hasOwnProperty('location')) {\r\n\t\t\tlet isValidLocation = false;\r\n\t\t\tif (condition.location === roomID) {\r\n\t\t\t\tisValidLocation = true;\r\n\t\t\t}\r\n\t\t\tif (isValidLocation === false) {\r\n\t\t\t\tallowed = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Do you need money?\r\n\t\tif (condition.hasOwnProperty('haveMoney')) {\r\n\t\t\tlet hasMoney = false;\r\n\t\t\tif (money >= condition.haveMoney) {\r\n\t\t\t\thasMoney = true;\r\n\t\t\t}\r\n\t\t\tif (hasMoney === false) {\r\n\t\t\t\tallowed = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (allowed === true) {\r\n\t\t\tallowableActions.push(actionsToCheck[i]);\r\n\t\t}\r\n\t}\r\n\t//console.log(allowableActions)\r\n\treturn allowableActions.map((action: IAction) => {\r\n\t\treturn action;\r\n\t});\r\n}","import React, { FunctionComponent , Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ActionButton } from \"../styled-constants\";\r\nimport {\r\n  //getRoomData,\r\n  getAllowedActions,\r\n} from \"../utils/dataHelper\";\r\nimport {\r\n  resultSuccessRoll,\r\n  resultMessage,\r\n  resultScore,\r\n  resultTake,\r\n  resultDrop,\r\n  resultLocation,\r\n  resultDestroy,\r\n  resultMoney,\r\n  resultRoomDesc,\r\n  resultCreateExit,\r\n  restart\r\n} from \"../actions\";\r\n\r\nimport { IState, IItem, IAction } from \"../types\";\r\n\r\nconst GameActionButton= styled(ActionButton)`\r\n  margin:5px;\r\n`;\r\n\r\nconst Actions: FunctionComponent  = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const objects: Array<IItem> = useSelector((state: IState) => state.gameData.objects);\r\n  const actions: Array<IAction> = useSelector((state: IState) => state.gameData.actions);\r\n  const room: number | string = useSelector((state: IState) => state.gameData.room);\r\n  const money: number = useSelector((state: IState) => state.gameData.money);\r\n\r\n\r\n  const handleAction = (gameActionName: string) => (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    //console.log(gameActionName)\r\n    e.preventDefault();\r\n    const allowableActions: Array<IAction> = getAllowedActions(\r\n      objects,\r\n      actions,\r\n      room,\r\n      money\r\n    )\r\n   \r\n    const results = allowableActions.filter((a:IAction) => {\r\n      return a.action === gameActionName;\r\n    });\r\n    if(results.length!==1){\r\n      console.log(\"More than one action was matched: you should combine results instead\")\r\n    }\r\n \r\n\r\n    for (let key of Object.keys(results[0].results)) {\r\n      //console.log(\"Dispatch 1 or more Results from handle Action\")\r\n      dispatchResults(key, results[0].results[key]);\r\n    }\r\n  };\r\n\r\n  const dispatchResults = (gameActionName: string, data: any) => {\r\n    //console.log(\"action data is different for each action response - so any is fine for now\");\r\n    switch (gameActionName) {\r\n      case \"createExitOnRollSuccess\":\r\n        const roll:number = Math.ceil(Math.random() * data.sides);\r\n\r\n        //console.log(roll, data.sides);\r\n        if (roll === data.sides) {\r\n          dispatch(resultSuccessRoll(roll === data.sides));\r\n\r\n          dispatch(resultCreateExit({ dir: data.dir, toRoom: data.toRoom }));\r\n\r\n          //rollmMssage\r\n          dispatch(\r\n            resultMessage(\r\n              \"You rolled a \" +\r\n              roll +\r\n              \" from a \" +\r\n              data.sides +\r\n              \" sided dice. \" +\r\n              data.rollMessage\r\n            )\r\n          );\r\n        } else {\r\n          dispatch(\r\n            resultMessage(\r\n              \"You rolled a \" + roll + \" from a \" + data.sides + \" sided dice. \"\r\n            )\r\n          );\r\n        }\r\n\r\n        break;\r\n\r\n      case \"message\":\r\n        dispatch(resultMessage(data));\r\n        break;\r\n      case \"take\":\r\n        dispatch(resultTake(data));\r\n        break;\r\n      case \"drop\":\r\n        dispatch(resultDrop(data));\r\n        break;\r\n      case \"changeScore\":\r\n        dispatch(resultScore(data));\r\n        break;\r\n      case \"changeLocation\":\r\n        dispatch(resultLocation(data));\r\n        break;\r\n      case \"destroys\":\r\n        dispatch(resultDestroy(data));\r\n        break;\r\n      case \"addMoney\":\r\n        dispatch(resultMoney(data));\r\n        break;\r\n      case \"removeMoney\":\r\n        dispatch(resultMoney(-data));\r\n        break;\r\n      case \"changeRoomDesc\":\r\n        dispatch(resultRoomDesc(data));\r\n        break;\r\n      case \"createExit\":\r\n        dispatch(resultCreateExit(data));\r\n        break;\r\n      case \"restart\":\r\n        dispatch(restart());\r\n\r\n        break;\r\n      default:\r\n        console.warn(\"WARNING result = [\" + gameActionName + \"] is not being processed!\");\r\n    }\r\n  }\r\n\r\n  const allowableActions: Array<IAction> = getAllowedActions(\r\n    objects,\r\n    actions,\r\n    room,\r\n    money\r\n  )\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      {allowableActions.length > 0 &&\r\n        allowableActions.map((action, index) => {\r\n          return (\r\n            <GameActionButton key={index} onClick={handleAction(action.action)}>\r\n              {action.action}\r\n            </GameActionButton >\r\n          );\r\n        })}\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Actions;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ActionButton } from \"../styled-constants\";\r\nimport { getRoomData, getAllowedExits } from \"../utils/dataHelper\";\r\nimport { resultMessage, resultLocation } from \"../actions\";\r\nimport { IState, IRoomData } from \"../types\"\r\n\r\nconst ActionsDiv = styled.div`\r\n  display: inline-block;\r\n  vertical-align: top;\r\n`;\r\n\r\nconst MoveButton = styled(ActionButton)`\r\n  margin:5px;\r\n`;\r\ninterface IExits {\r\n  n: string;\r\n  e: string;\r\n  s: string;\r\n  w: string;\r\n  u: string;\r\n  d: string;\r\n}\r\n\r\nconst ExploreActions: FunctionComponent  = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const roomID: number | string = useSelector((state: IState) => state.gameData.room);\r\n  const rooms: Array<IRoomData> = useSelector((state: IState) => state.gameData.rooms);\r\n\r\n  const handleMove = (selectedExit: string) => (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    const currentRoomExits: IExits = getRoomData(roomID, rooms).exits;\r\n    //console.log(currentRoomExits)\r\n    e.preventDefault();\r\n    switch (selectedExit) {\r\n      case \"Up\":\r\n        dispatch(resultLocation(currentRoomExits.u));\r\n        dispatch(resultMessage(\"You've travelled Up\"));\r\n        break;\r\n      case \"Down\":\r\n        dispatch(resultLocation(currentRoomExits.d));\r\n        dispatch(resultMessage(\"You've travelled Down\"));\r\n        break;\r\n      case \"North\":\r\n        dispatch(resultLocation(currentRoomExits.n));\r\n        dispatch(resultMessage(\"You've travelled North\"));\r\n        break;\r\n      case \"South\":\r\n        dispatch(resultLocation(currentRoomExits.s));\r\n        dispatch(resultMessage(\"You've travelled South\"));\r\n        break;\r\n      case \"West\":\r\n        dispatch(resultLocation(currentRoomExits.w));\r\n        dispatch(resultMessage(\"You've travelled West\"));\r\n        break;\r\n      case \"East\":\r\n        dispatch(resultLocation(currentRoomExits.e));\r\n        dispatch(resultMessage(\"You've travelled East\"));\r\n        break;\r\n      default:\r\n        console.warn(\"WARNING - EXIT = [\" + selectedExit + \"] is not being processed!\");\r\n    }\r\n  };\r\n\r\n  const currentRoomData: IRoomData = getRoomData(roomID, rooms);\r\n  const exits = getAllowedExits(currentRoomData);\r\n  return (\r\n    <ActionsDiv>\r\n      <div\r\n        style={{\r\n          width: \"140px\",\r\n          display: \"inline-block\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <MoveButton disabled={!exits.includes(\"n\")} onClick={handleMove(\"North\")}>\r\n          North\r\n            </MoveButton>\r\n        <div>\r\n          <div style={{ display: \"inline-block\", width: \"50%\" }}>\r\n            <MoveButton disabled={!exits.includes(\"w\")} onClick={handleMove(\"West\")}>\r\n              West\r\n            </MoveButton>\r\n          </div>\r\n          <div style={{ display: \"inline-block\", width: \"50%\" }}>\r\n            <MoveButton disabled={!exits.includes(\"e\")} onClick={handleMove(\"East\")}>\r\n              East\r\n            </MoveButton>\r\n          </div>\r\n        </div>\r\n        <MoveButton disabled={!exits.includes(\"s\")} onClick={handleMove(\"South\")}>\r\n          South\r\n            </MoveButton>\r\n        <div>\r\n          <div style={{ display: \"inline-block\", width: \"50%\" }}>\r\n            <MoveButton disabled={!exits.includes(\"u\")} onClick={handleMove(\"Up\")}>\r\n              Up\r\n            </MoveButton>\r\n          </div>\r\n          <div style={{ display: \"inline-block\", width: \"50%\" }}>\r\n            <MoveButton disabled={!exits.includes(\"d\")} onClick={handleMove(\"Down\")}>\r\n              Down\r\n            </MoveButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ActionsDiv>\r\n  );\r\n};\r\n\r\nexport default ExploreActions;\r\n","import React, { FunctionComponent, useEffect, useState, useRef } from \"react\";\r\nimport { debounce } from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { IRoomData } from \"../types\"\r\n\r\nconst canvasPath = \"url('\" + process.env.PUBLIC_URL + \"/assets/theshivers/images/game_bg.jpg')\"\r\nconst WorldMapDiv = styled.div`\r\n    > canvas {\r\n      border-radius: 10px;\r\n      display: inline;\r\n      background-image: ${canvasPath}\r\n    }\r\n  `;\r\n\r\ninterface IProps {\r\n  roomID: number | string;\r\n  rooms: Array<IRoomData>;\r\n  discoveredPaths: Array<string>;\r\n}\r\n\r\nconst WorldMap: FunctionComponent<IProps> = ({ roomID, rooms, discoveredPaths }) => {\r\n  const canvasRef = useRef<any>();\r\n  const mapContainerRef = useRef<any>();\r\n  const [mapWidth, setMapWidth] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const updateCanvasDebounce = debounce(() => {\r\n      if (!mapContainerRef.current) {\r\n        //TODO why is mapContainerRef sometimes missing?\r\n        return;\r\n      }\r\n      setMapWidth(Math.max(Math.min(mapContainerRef.current.offsetWidth, 100), 100));\r\n    }, 40);\r\n\r\n    updateCanvasDebounce()\r\n    window.addEventListener(\"resize\", updateCanvasDebounce);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateCanvasDebounce);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateCanvasCalc = () => {\r\n      if (canvasRef && canvasRef.current && canvasRef.current.getContext && canvasRef.current.getContext(\"2d\")) {\r\n        const ctx: CanvasRenderingContext2D = canvasRef.current.getContext(\"2d\");\r\n        if (!ctx) {\r\n          return;\r\n        }\r\n        const visitedRooms = rooms.filter((roomData: IRoomData) => {\r\n          if (discoveredPaths.includes(roomData.id)) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n\r\n        canvasRef.current.width = mapWidth;\r\n        canvasRef.current.height = mapWidth;\r\n        //Named rooms are expected to be hidden. Only numbered rooms should appear on map\r\n\r\n        const spacing = mapWidth / 5;\r\n        const middle = spacing / 2;\r\n\r\n        //Cutout circle\r\n        ctx.fillStyle = \"#000000\";\r\n        ctx.fillRect(0, 0, mapWidth, mapWidth);\r\n        ctx.save();\r\n        ctx.globalCompositeOperation = \"destination-out\";\r\n        ctx.beginPath();\r\n\r\n        //Swap out if i want to revert to a circular map\r\n        //ctx.arc(width / 2, width / 2, width / 2, 0, Math.PI * 2, true);\r\n        ctx.fillRect(0, 0, mapWidth, mapWidth);\r\n        ctx.fill();\r\n        ctx.restore();\r\n        ctx.strokeStyle = \"#333\";\r\n        ctx.setLineDash([1, 5]);\r\n\r\n        //DRAW ROOM LINKS\r\n\r\n        for (let room of visitedRooms) {\r\n          const grid = parseInt(room.id, 10);\r\n          if (grid > 10) {\r\n            const x = Math.floor(grid / 10) * spacing + middle;\r\n            const y = (grid % 10) * spacing + middle;\r\n            const exits: Array<any> = Object.values(room.exits)\r\n            for (let exit of exits) {\r\n              const exitVal = parseInt(exit, 10);\r\n              if (exitVal > 10) {\r\n                const xE = Math.floor(exitVal / 10) * spacing + middle;\r\n                const yE = (exitVal % 10) * spacing + middle;\r\n                ctx.moveTo(x / 2, y / 2);\r\n                ctx.lineTo(xE / 2, yE / 2);\r\n                ctx.stroke();\r\n              }\r\n            };\r\n          }\r\n        };\r\n        //DRAW PLAYER POSTION\r\n\r\n        if ((roomID) > 10) {\r\n          const roomNumber: number = Number(roomID);\r\n          //Player\r\n          const x = Math.floor(roomNumber / 10) * spacing + middle;\r\n          const y = (roomNumber % 10) * spacing + middle;\r\n          ctx.save();\r\n          ctx.beginPath();\r\n          ctx.strokeStyle = \"rgba(0, 0, 0, 0)\";\r\n          ctx.arc(x / 2, y / 2, spacing / 6, 0, 2 * Math.PI);\r\n          ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\r\n          ctx.stroke();\r\n          ctx.fill();\r\n          ctx.restore();\r\n        }\r\n\r\n\r\n        //DARKEN UNVISITED ROOMS\r\n        for (let x = 0; x < 10; x++) {\r\n          for (let y = 0; y < 10; y++) {\r\n            const visited =\r\n              visitedRooms.filter(room => {\r\n                return parseInt(room.id) === x * 10 + y;\r\n              }).length === 1;\r\n            if (!visited) {\r\n              ctx.save();\r\n              ctx.shadowBlur = 30;\r\n              ctx.shadowColor = \"black\";\r\n              ctx.fillStyle = \"rgba(0, 0, 0,0.1)\";\r\n              ctx.fillRect(\r\n                ((x - 1) * spacing) / 2 - spacing / 4 + spacing / 2 + middle / 2,\r\n                (y * spacing) / 2 - spacing / 4 + middle / 2,\r\n                spacing / 2,\r\n                spacing / 2\r\n              );\r\n              ctx.restore();\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    updateCanvasCalc();\r\n  }, [mapWidth, roomID, canvasRef, discoveredPaths, rooms]);\r\n\r\n  return (\r\n    <>\r\n      {mapContainerRef && canvasRef &&\r\n        <WorldMapDiv ref={mapContainerRef}>\r\n          <canvas ref={canvasRef} />\r\n        </WorldMapDiv>\r\n      }\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default WorldMap;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport RoomDescription from \"../components/RoomDescription\";\r\nimport RoomImage from \"../components/RoomImage\";\r\nimport Message from \"../components/Message\";\r\nimport LocationObjects from \"../components/LocationObjects\";\r\nimport Inventory from \"../components/Inventory\";\r\nimport GameActions from \"../components/GameActions\";\r\nimport ExploreActions from \"../components/ExploreActions\";\r\nimport WorldMap from \"../components/WorldMap\";\r\n//import Debug from '../components/Debug';\r\nimport { IState, IRoomData, IItem } from \"../types\";\r\nimport { getRoomData, getInventory, getLocationObjects } from \"../utils/dataHelper\";\r\n\r\n/*\r\nThe project was built assuming it is hosted at the server root.\r\nYou can control this with the homepage field in your package.json.\r\nFor example, add this to build it for GitHub Pages:\r\n\r\n  \"homepage\" : \"http://myname.github.io/myapp\",\r\n*/\r\n//npm run build\r\n//yarn global add serve\r\n//yarn - s serve\r\n//http://localhost:5000\r\n\r\nconst HomeDiv = styled.div`\r\n  max-width: 600px;\r\n\r\n  margin: 70px auto 0px auto;\r\n  @media only screen and (min-width: 600px) {\r\n    /* wider */\r\n  }\r\n`;\r\nconst TextPanelDiv = styled.div`\r\n`;\r\nconst MapContainerDiv = styled.div`\r\n  display: inline-block;\r\n  width: calc(100% - 150px);\r\n  /*width:120px;*/\r\n  vertical-align:top;\r\n\r\n  @media only screen and (min-width: 600px) {\r\n    /* wider */\r\n    >div {\r\n  \r\n    }\r\n  }\r\n`;\r\nconst ImageContainerDiv = styled.div`\r\n display: inline-block;\r\n  /*width:72%;*/\r\n  width:100%;\r\n`\r\n\r\n\r\nconst Game: FunctionComponent = () => {\r\n\r\n  const objects: Array<IItem> = useSelector((state: IState) => state.gameData.objects);\r\n  const roomID: number | string = useSelector((state: IState) => state.gameData.room);\r\n  const money: number = useSelector((state: IState) => state.gameData.money);\r\n  const rooms: Array<IRoomData> = useSelector((state: IState) => state.gameData.rooms);\r\n  const discoveredPaths: any = useSelector((state: IState) => state.gameData.discoveredPaths);\r\n  const lastMessage: string = useSelector((state: IState) => state.gameData.lastMessage);\r\n\r\n  const getDescription = (roomData: IRoomData): string => {\r\n    if (roomData && roomData.desc && roomData.desc.length) {\r\n      return roomData.desc[0];\r\n    } else {\r\n      console.log(\"NO roomData desc for \" + roomData);\r\n      return \"\";\r\n    }\r\n  }\r\n  const getImage = (roomData: IRoomData): string => {\r\n    if (roomData && roomData.image) {\r\n      return roomData.image;\r\n    } else {\r\n      console.log(\"NO roomData image for \" + roomData);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  //Dont Allow rendering if data is empty\r\n  if (rooms.length === 0) {\r\n    return <p>NOT LOADED</p>;\r\n  }\r\n  const currentRoomData = getRoomData(roomID, rooms);\r\n  const description = getDescription(currentRoomData);\r\n  const locationObjects = getLocationObjects(roomID, objects);\r\n  const image = getImage(currentRoomData);\r\n  const inventory = getInventory(objects);\r\n\r\n  // assets folder may be switchable later\r\n  const assetsFolder = \"theshivers\";\r\n\r\n  return (\r\n    <HomeDiv>\r\n      <ImageContainerDiv>\r\n        <RoomImage\r\n          path={process.env.PUBLIC_URL + \"/assets/\" + assetsFolder + \"/images/\"}\r\n          image={image}\r\n        />\r\n      </ImageContainerDiv>\r\n      <div style={{ display: 'inline-block', width: \"150px\" }}>\r\n        <ExploreActions />\r\n      </div>\r\n      <MapContainerDiv>\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <WorldMap\r\n            discoveredPaths={discoveredPaths}\r\n            roomID={roomID}\r\n            rooms={rooms}\r\n          />\r\n        </div>\r\n      </MapContainerDiv>\r\n      <GameActions />\r\n      <TextPanelDiv>\r\n        <Message message={lastMessage} />\r\n        <RoomDescription description={description} />\r\n        <LocationObjects items={locationObjects} />\r\n        <Inventory items={inventory} money={money} />\r\n      </TextPanelDiv>\r\n      {/*<Debug debug={JSON.stringify(objects)} />*/}\r\n    </HomeDiv>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React, { FunctionComponent, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { ActionButton } from \"../styled-constants\";\r\nimport { restart } from \"../actions\";\r\n\r\nimport {\r\n  useParams,\r\n  useLocation,\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\nimport { IState } from \"../types\"\r\n\r\nconst PageDiv = styled.div`\r\n  max-width: 600px;\r\n  margin: 70px auto 0px auto;\r\n  padding: 10px;\r\n  > p {\r\n    line-height: 20px;\r\n    margin-block-start: 1px;\r\n    margin-block-end: 3px;\r\n  }\r\n`;\r\n\r\nconst About: FunctionComponent = () => {\r\n\r\n  const { slug } = useParams()\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch();\r\n  const [width, setWidth] = React.useState(0);\r\n  const [height, setHeight] = React.useState(0);\r\n\r\n  const move: number = useSelector((state: IState) => state.gameData.move);\r\n\r\n  //const debugState:any = useSelector((state: IState) => state.gameData);\r\n  //console.log(debugState)\r\n\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n\r\n      setWidth(window.innerWidth);\r\n      setHeight(window.innerHeight);\r\n    };\r\n    updateWindowDimensions();\r\n\r\n    window.addEventListener(\"resize\", updateWindowDimensions);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateWindowDimensions);\r\n    }\r\n  }, [])\r\n\r\n\r\n  const handleRestart = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    dispatch(restart())\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <PageDiv>\r\n        <div style={{ background: \"#333\", padding: \"10px\", borderRadius: \"4px\" }}>\r\n          <h2>Game Engine For Interactive Fiction</h2>\r\n          <p>By Mark Horsell</p>\r\n        </div>\r\n        <br />\r\n        <div style={{ background: \"#333\", padding: \"10px\", borderRadius: \"4px\" }}>\r\n          <h3>Version 2.1.1 : 27 September 2019</h3>\r\n          <p>Redux connect replaced with useDispatch and useSelector Hooks.</p>\r\n          <br />\r\n          <h3>Version 2.1.0 : 25 September 2019</h3>\r\n          <p>Now uses 100% Functional Components with Hooks - All Classes and Lifecycle methods removed.</p>\r\n          <br />\r\n          <h3>Version 2.0.0 : 24 March 2019</h3>\r\n          <p>Converted from JavaScript to TypeScript and from Inline-CSS to Styled-components.</p>\r\n          <br />\r\n          <h3>Version 1.0.3 : May 2018</h3>\r\n          <p>Class Based, Inline-CSS, React Router, Redux.</p>\r\n        </div>\r\n        <br />\r\n        <div style={{ background: \"#333\", padding: \"10px\", borderRadius: \"4px\" }}>\r\n          <h3>Debug Info</h3>\r\n          <p>URL : {window.location.href}</p>\r\n          <p>PUBLIC_URL : {process.env.PUBLIC_URL}</p>\r\n          <p>\r\n            W : {width} | H : {height}\r\n          </p>\r\n          <p>React Version : {React.version} </p>\r\n          <p>slug : {slug} </p>\r\n          <p>location : {JSON.stringify(location)} </p>\r\n          <p>history : {JSON.stringify(history)} </p>\r\n        </div>\r\n\r\n        <br />\r\n\r\n        <div style={{ background: \"#333\", padding: \"10px\", borderRadius: \"4px\" }}>\r\n          <p>\r\n            WARNING : Perfoming a reset will clear all data and is not undoable.\r\n          </p>\r\n          <ActionButton disabled={move < 1} onClick={handleRestart}>Reset game</ActionButton>\r\n          {move === 0 &&\r\n            <p>You haven't left the starting room yet</p>}\r\n        </div>\r\n      </PageDiv>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\r\n\r\n\r\nimport {\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n  /*useParams,\r\n  useLocation,\r\n  useHistory*/\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Game from \"./pages/Game\";\r\nimport About from \"./pages/About\";\r\n\r\nimport {\r\n  restart\r\n} from \"./actions\";\r\n\r\nimport { IState } from \"./types\"\r\n\r\n\r\n\r\n\r\nconst AppContent: React.FC = () => {\r\n\r\n  /*\r\n  //let { slug } = useParams()\r\n  let location = useLocation()\r\n  //let history = useHistory()\r\n  // console.log(slug)\r\n  console.log(process.env.PUBLIC_URL);\r\n  console.log(location.pathname)\r\n  //console.log(history)\r\n  */\r\n  const dispatch = useDispatch()\r\n  const gameTitle = useSelector((state: IState) => state.gameData.gameTitle);\r\n\r\n  useEffect(() => {\r\n    if (gameTitle) {\r\n      //Alreay has gameTitle so must have come from persist\r\n      //console.log(\"game data from cache\");\r\n    } else {\r\n      dispatch(restart());\r\n    }\r\n  }, [gameTitle, dispatch]);\r\n\r\n  if(!gameTitle){\r\n    return <main><div>Not Loaded...</div></main>\r\n  }\r\n\r\n  return (\r\n    <main>\r\n          <Header title={gameTitle} />\r\n          <Switch>\r\n            {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n            {/* GITHUB PAGES does not support any url rewrite - so not ideal for routed apps - use a 404 redirect instead*/}\r\n            <Route path={`${process.env.PUBLIC_URL}/game`} component={Game} />\r\n            <Route path={`${process.env.PUBLIC_URL}/about`} component={About} />\r\n         \r\n           \r\n            <Redirect from={`${process.env.PUBLIC_URL}/`} to={`${process.env.PUBLIC_URL}/game`} />\r\n\r\n          </Switch>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nexport default AppContent;\r\n"],"sourceRoot":""}