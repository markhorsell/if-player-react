{"version":3,"sources":["theme.tsx","actions/io.tsx","actions/index.tsx","reducers/ioReducer.tsx","reducers/index.tsx","store/configureStore.tsx","App.tsx","registerServiceWorker.js","index.tsx"],"names":["GlobalStyles","createGlobalStyle","props","theme","BACKGROUND_COLOR","TEXT_COLOR","HIGHLIGHT_COLOR","BUTTON_TEXT_COLOR","BUTTON_DISABLED_TEXT_COLOR","BUTTON_ENABLED","BUTTON_DISABLED","RESULT_MESSAGE","RESULT_ROLL","RESULT_SCORE","RESULT_TAKE","RESULT_DROP","RESULT_LOCATION","RESULT_DESTROY","RESULT_MONEY","RESULT_ROOM_DESC","RESULT_CREATE_EXIT","RESTART","restart","type","resultSuccessRoll","data","resultMessage","resultScore","resultTake","resultDrop","resultLocation","resultDestroy","resultMoney","resultRoomDesc","resultCreateExit","emptyState","gameTitle","score","money","room","lastMessage","discoveredPaths","move","rooms","actions","objects","rootReducer","combineReducers","gameData","state","action","restartData","JSON","parse","stringify","initialData","roll","updatedObjects","map","obj","forEach","itemID","loc","droppedObjects","paths","concat","indexOf","push","updatedDestroyObjects","r","id","desc","roomExits","dir","exits","e","toRoom","w","n","s","match","input","persistConfig","key","storage","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","AppContent","lazy","App","StrictMode","loading","basename","fallback","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f47f1401.chunk.js","sourcesContent":["\r\n\r\nimport { createGlobalStyle } from \"styled-components/macro\";\r\n\r\n//try https://scotch.io/@micwanyoike/how-to-add-fonts-to-a-react-project\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/*font-display: auto;*/\r\n/*@import url(https://fonts.googleapis.com/css?family=Jacques+Francois+Shadow|Rye|Yesteryear|VT323|Lato);*/\r\n \r\n@import url(https://fonts.googleapis.com/css?family=Yesteryear|Lato&display=swap);\r\nbody {\r\n\t/*font-family: 'VT323', monospace;*/\r\n\tfont-family: 'Lato', sans-serif;\r\n\tfont-size:14px;\r\n\tletter-spacing: 1px;\r\n\tline-height: 18px;\r\n\tbackground-color: ${props => theme.BACKGROUND_COLOR};\r\n\tcolor: ${props => theme.TEXT_COLOR};\r\n\r\n}\r\n`;\r\n\r\n\r\n\r\nconst blackGoldTheme = {\r\n  BACKGROUND_COLOR: \"#1a1a1a\",\r\n  TEXT_COLOR: \"#F8F8F8\",\r\n  HIGHLIGHT_COLOR: \"gold\",\r\n  BUTTON_TEXT_COLOR:\"#000\",\r\n  BUTTON_DISABLED_TEXT_COLOR:\"#333\",\r\n  BUTTON_ENABLED:\"gold\",\r\n  BUTTON_DISABLED:\"#666\"\r\n};\r\n/*\r\nconst silverTheme = {\r\n    BACKGROUND_COLOR: \"#e0e0e0\",\r\n    TEXT_COLOR: \"#1a1a1a\",\r\n    HIGHLIGHT_COLOR: \"#000\",\r\n    BUTTON_TEXT_COLOR:\"#000\",\r\n    BUTTON_ENABLED:\"#FFF\",\r\n    BUTTON_DISABLED:\"#333\"\r\n  };\r\n  */\r\n\r\nexport const theme = blackGoldTheme;\r\n\r\n\r\n","\r\n//export * from './actions_reddit';\r\n//import fetch from 'isomorphic-fetch'\r\n\r\nexport const INIT_DATA = 'INIT_DATA';\r\nexport const RESULT_MESSAGE ='RESULT_MESSAGE';\r\nexport const RESULT_ROLL= 'RESULT_ROLL';\r\nexport const RESULT_SCORE ='RESULT_SCORE';\r\nexport const RESULT_TAKE ='RESULT_TAKE';\r\nexport const RESULT_DROP = 'RESULT_DROP';\r\nexport const RESULT_LOCATION ='RESULT_LOCATION';\r\nexport const RESULT_DESTROY = 'RESULT_DESTROY';\r\nexport const RESULT_MONEY ='RESULT_MONEY';\r\nexport const RESULT_ROOM_DESC='RESULT_ROOM_DESC';\r\nexport const RESULT_CREATE_EXIT='RESULT_CREATE_EXIT';\r\nexport const RESTART='RESTART';\r\n\r\nexport function restart(){\r\n    return {\r\n        type:RESTART,\r\n        \r\n    }\r\n}\r\n\r\nexport function initData(data:string | number){\r\n    console.log('is this just a room set?')\r\n   \r\n    return {\r\n        type:INIT_DATA,\r\n        data: data,\r\n    }\r\n}\r\n\r\nexport function resultSuccessRoll(data:boolean){\r\n   \r\n    return {\r\n        type:RESULT_ROLL,\r\n        \r\n        data:data,\r\n    }\r\n}\r\n\r\nexport function resultMessage(data:string){\r\n  \r\n    return {\r\n        type:RESULT_MESSAGE,\r\n        data:data,\r\n    }\r\n}\r\nexport function resultScore(data:number){\r\n   //shivers doesnt dispatch any \"changeScore\" events in json..\r\n   //.. but other ganes could\r\n   \r\n    return {\r\n        type:RESULT_SCORE,\r\n        data:data,\r\n    }\r\n}\r\nexport function resultTake(data:Array<string>){\r\n   \r\n    return {\r\n        type:RESULT_TAKE,\r\n        data:data,\r\n    }\r\n}\r\nexport function resultDrop(data:Array<string>){\r\n \r\n    return {\r\n        type:RESULT_DROP,\r\n        data:data,\r\n    }\r\n}\r\n\r\n\r\nexport function resultLocation(data:string | number){\r\n \r\n    return {\r\n        type:RESULT_LOCATION,\r\n        data:data,\r\n    }\r\n}\r\nexport function resultDestroy(data:Array<string>){\r\n   \r\n    return {\r\n        type:RESULT_DESTROY,\r\n        data:data,\r\n    }\r\n}\r\n\r\nexport function resultMoney(data:number){\r\n   \r\n    return {\r\n        type:RESULT_MONEY,\r\n        data:data,\r\n    }\r\n}\r\nexport function resultRoomDesc(data:string){\r\n    //called when desc changes, The miller, his wife and the babdy\r\n    \r\n    return {\r\n        type:RESULT_ROOM_DESC,\r\n        data:data,\r\n    }\r\n}\r\ninterface ICreateExit  {\r\n    dir:string;\r\n    toRoom:string;\r\n}\r\nexport function resultCreateExit(data:ICreateExit){\r\n   \r\n    return {\r\n        type:RESULT_CREATE_EXIT,\r\n        data:data,\r\n    }\r\n}","export * from './io';","\r\n\r\nimport {\r\n  //INIT_DATA,\r\n  RESULT_ROLL,\r\n  RESULT_MESSAGE,\r\n  RESULT_SCORE,\r\n  RESULT_TAKE,\r\n  RESULT_DROP,\r\n  RESULT_LOCATION,\r\n  RESULT_DESTROY,\r\n  RESULT_MONEY,\r\n  RESULT_ROOM_DESC,\r\n  RESULT_CREATE_EXIT,\r\n  RESTART\r\n} from \"../actions\";\r\n\r\nimport { IRoomData, IItem, /*IAction, */ IGameState} from \"../types\";\r\n\r\nimport initialData from \"../assets/theshivers/data.json\";\r\n\r\ninterface IReduxAction {\r\n type:string;\r\n data:any;\r\n}\r\n\r\nexport const emptyState = {\r\n\r\n    gameTitle: \"\",\r\n    score: 0,\r\n    money: 0,\r\n    room: 0,\r\n    lastMessage: \"\",\r\n    discoveredPaths: \"\",\r\n    move: 0,\r\n    rooms: [],\r\n    actions: \"\",\r\n    objects: []\r\n  \r\n}\r\n\r\n\r\nexport function gameData(state:IGameState = emptyState, action:IReduxAction) {\r\n  //console.log(state)\r\n  if(!action.type){\r\n    //To satisfy testing.. needs work\r\n    return emptyState\r\n  }\r\n \r\n  switch (action.type) {\r\n    case RESTART:\r\n      //RestartData needs to be a copy not a reference!\r\n      const restartData = JSON.parse(JSON.stringify(initialData));\r\n     \r\n      return {\r\n        ...state,\r\n        gameTitle: restartData.gameTitle,\r\n        score: restartData.score,\r\n        money: restartData.money,\r\n        room: restartData.room,\r\n        lastMessage: restartData.lastMessage,\r\n        discoveredPaths: restartData.discoveredPaths,\r\n        move: restartData.move,\r\n        rooms: restartData.rooms,\r\n        actions: restartData.actions,\r\n        objects: restartData.objects\r\n      };\r\n\r\n    case RESULT_MESSAGE:\r\n      return {\r\n        ...state,\r\n        lastMessage: action.data\r\n      };\r\n    case RESULT_ROLL: \r\n    //console.log('RESULT_ROLL'+action.data)\r\n      return {\r\n        ...state,\r\n        roll: action.data\r\n    }\r\n    case RESULT_SCORE:\r\n      return {\r\n        ...state,\r\n        score: state.score + action.data\r\n      };\r\n    case RESULT_TAKE:\r\n      const updatedObjects = state.objects.map((obj:IItem)  => {\r\n        action.data.forEach((itemID:string) => {\r\n          if (obj.obj === itemID) {\r\n            obj.loc = \"INV\";\r\n          }\r\n        });\r\n        return obj;\r\n      });\r\n      return {\r\n        ...state,\r\n        objects: [...updatedObjects]\r\n      };\r\n    case RESULT_DROP:\r\n      const droppedObjects = state.objects.map((obj:IItem) => {\r\n        action.data.forEach((itemID:string) => {\r\n          if (obj.obj === itemID) {\r\n            obj.loc = state.room;\r\n          }\r\n        });\r\n        return obj;\r\n      });\r\n      return {\r\n        ...state,\r\n        objects: [...droppedObjects]\r\n      };\r\n    case RESULT_LOCATION:\r\n      const paths = state.discoveredPaths.concat();\r\n      if (paths.indexOf(action.data) === -1) {\r\n        paths.push(action.data);\r\n      }\r\n      return {\r\n        ...state,\r\n        room: action.data,\r\n        discoveredPaths: paths\r\n      };\r\n    case RESULT_DESTROY:\r\n      const updatedDestroyObjects = state.objects.map((obj:IItem) => {\r\n        action.data.forEach((itemID:string) => {\r\n          if (obj.obj === itemID || itemID === \"ALL\") {\r\n            obj.loc = \"\";\r\n          }\r\n        });\r\n\r\n        return obj;\r\n      });\r\n      return {\r\n        ...state,\r\n        objects: [...updatedDestroyObjects]\r\n      };\r\n    case RESULT_MONEY:\r\n      return {\r\n        ...state,\r\n        money: state.money + action.data\r\n      };\r\n    case RESULT_ROOM_DESC:\r\n      const rooms = state.rooms.map((r:IRoomData) => {\r\n        if (r.id === state.room) {\r\n          r.desc = action.data;\r\n        }\r\n        return r;\r\n      });\r\n      return {\r\n        ...state,\r\n        rooms: [...rooms]\r\n      };\r\n    case RESULT_CREATE_EXIT:\r\n      const roomExits = state.rooms.map((r:IRoomData) => {\r\n        if (r.id === state.room) {\r\n          if (action.data.dir === \"e\") {\r\n            r.exits.e = action.data.toRoom;\r\n          }\r\n          if (action.data.dir === \"w\") {\r\n            r.exits.w = action.data.toRoom;\r\n          }\r\n          if (action.data.dir === \"n\") {\r\n            r.exits.n = action.data.toRoom;\r\n          }\r\n          if (action.data.dir === \"s\") {\r\n            r.exits.s = action.data.toRoom;\r\n          }\r\n        }\r\n        return r;\r\n      });\r\n      return {\r\n        ...state,\r\n        rooms: [...roomExits]\r\n      };\r\n      \r\n    case (action.type.match(/^@@redux/) || {}).input:\r\n    case (action.type.match(/^@@INIT/) || {}).input:\r\n      // console.log('BUILT IN '+action.type);\r\n      return state;\r\n\r\n    default:\r\n      //  console.log('REDUCER DIDNT PROCESS [' + action.type + ']');\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { gameData} from './ioReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  gameData,\r\n \r\n  })\r\n  \r\n  export default rootReducer","import {createStore, applyMiddleware, compose} from 'redux';\r\n\r\n\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\nimport rootReducer from '../reducers';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n\r\n\r\n\r\n\r\nconst composeEnhancers:typeof compose = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE || compose;\r\n\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\nconst persistor = persistStore(store);\r\nexport default {store, persistor};\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/configureStore\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { GlobalStyles, theme } from \"./theme\";\r\nimport /*styled,*/ { ThemeProvider } from \"styled-components/macro\";\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\n\r\nconst AppContent = lazy(() => import('./AppContent'));\r\n\r\n\r\nconst App: React.SFC = () => {\r\n  return (\r\n    <React.StrictMode>\r\n      <Provider store={store.store as any}>\r\n        <PersistGate loading={null} persistor={store.persistor}>\r\n          <ThemeProvider theme={theme}>\r\n            <>\r\n              <GlobalStyles />\r\n              <Router basename={\"\"}>\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                  <AppContent />\r\n                </Suspense>\r\n              </Router>\r\n            </>\r\n          </ThemeProvider>\r\n        </PersistGate>\r\n      </Provider>\r\n    </React.StrictMode>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nrender(\r\n      <App />\r\n   ,\r\n  document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}